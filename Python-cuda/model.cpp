/*  Translated by epsc  version December 2021 */
extern "C" {
typedef struct { float r; float i;} complex; 
typedef struct nctempfloat1 { int d[1]; float *a;} nctempfloat1; 
typedef struct nctempint1 { int d[1]; int *a;} nctempint1; 
typedef struct nctempchar1 { int d[1]; char *a;} nctempchar1; 
typedef struct nctempcomplex1 { int d[1]; complex *a;} nctempcomplex1; 
typedef struct nctempfloat2 { int d[2]; float *a;} nctempfloat2; 
typedef struct nctempint2 { int d[2]; int *a;} nctempint2; 
typedef struct nctempchar2 { int d[2]; char *a;} nctempchar2; 
typedef struct nctempcomplex2 { int d[2]; complex *a;} nctempcomplex2; 
typedef struct nctempfloat3 { int d[3]; float *a;} nctempfloat3; 
typedef struct nctempint3 { int d[3]; int *a;} nctempint3; 
typedef struct nctempchar3 { int d[3]; char *a;} nctempchar3; 
typedef struct nctempcomplex3 { int d[3]; complex *a;} nctempcomplex3; 
typedef struct nctempfloat4 { int d[4]; float *a;} nctempfloat4; 
typedef struct nctempint4 { int d[4]; int *a;} nctempint4; 
typedef struct nctempchar4 { int d[4]; char *a;} nctempchar4; 
typedef struct nctempcomplex4 { int d[4]; complex *a;} nctempcomplex4; 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void *GpuNew(int n);
void *GpuDelete(void *f);
void *GpuError();
void *RunMalloc(int n);
int RunFree(void * );
int RunSync();
int RunGetnt();
int RunGetnb();
int LibeArrayex (int line,nctempchar1 *name,int ival,int index,int bound);
int LibeClearerr ();
int LibeGeterrno ();
nctempchar1* LibeGeterrstr ();
struct MainArg {nctempchar1 *arg;
};
typedef struct nctempMainArg1 {int d[1]; struct MainArg *a; } nctempMainArg1;
struct nctempMainArg2 {int d[2]; struct MainArg *a; } ;
struct nctempMainArg3 {int d[3]; struct MainArg *a; } ;
struct nctempMainArg4 {int d[4]; struct MainArg *a; } ;
int Main (struct nctempMainArg1 *MainArgs);
int LibeInit ();
int LibeDelete ();
int LibeExit ();
nctempchar1* LibeGetenv (nctempchar1 *name);
int LibeOpen (nctempchar1 *name,nctempchar1 *mode);
int LibeClose (int fp);
int LibeGetc (int fp);
int LibeUngetc (int fp);
int LibeGetw (int fp,nctempchar1 *text);
int LibePs (nctempchar1 *s);
int LibePi (int n);
int LibePf (float r);
int LibePutf (int fp,float r,nctempchar1 *form);
int LibePutc (int fp,int c);
int LibePuts (int fp,nctempchar1 *s);
int LibePuti (int fp,int ival);
int LibeRead (int fp,int n,nctempchar1 *array);
int LibeWrite (int fp,int n,nctempchar1 *array);
int LibeSeek (int fp,int pos,int flag);
int LibeFlush (int fp);
int LibeStrlen (nctempchar1 *s);
int LibeStrcmp (nctempchar1 *s,nctempchar1 *t);
int LibeStrev (nctempchar1 *s);
nctempchar1* LibeStrsave (nctempchar1 *s);
int LibeStrcpy (nctempchar1 *s,nctempchar1 *t);
int LibeStrcat (nctempchar1 *s,nctempchar1 *t);
nctempchar1* LibeStradd (nctempchar1 *t,nctempchar1 *s);
int LibeIsalpha (int c);
int LibeIsdigit (int c);
int LibeIsalnum (int c);
int LibeAtoi (nctempchar1 *s);
int LibeItoa (int n,nctempchar1 *s);
int LibeItoh (int n,nctempchar1 *s);
float LibeAtof (nctempchar1 *s);
int LibeFtoa (float f,nctempchar1 *fmt,nctempchar1 *s);
float LibeMach (int flag);
float LibeFabs (float x);
float LibeFscale2 (float x,int n);
float LibeGetfman2 (float x);
int LibeGetfexp2 (float x);
float LibeFscale (float x,int n);
int LibeGetfman (float f,int maxdig);
float LibeGetffman (float f);
int LibeGetmaxdig (float f);
int LibeGetfexp (float f);
float LibeClock ();
int LibeSetnb (int n);
int LibeSetnt (int n);
int LibeGetnb ();
int LibeGetnt ();
int LibeMod (int n,int r);
float LibeSqrt (float x);
float LibeLn (float x);
float LibeExp (float x);
float LibeSin (float x);
float LibeCos (float x);
float LibeTan (float x);
float LibeArcsin (float x);
float LibeArccos (float x);
float LibeArctan (float x);
float LibePow (float base,float exponent);
int LibeSystem (nctempchar1 *cmd);
struct model {int Nx;
int Ny;
int Nb;
float W0;
nctempfloat2 *Qp;
nctempfloat2 *Qr;
nctempfloat2 *Kappa;
nctempfloat2 *Dkappax;
nctempfloat2 *Dkappay;
nctempfloat2 *Drhox;
nctempfloat2 *Drhoy;
nctempfloat2 *Rho;
nctempfloat2 *Alpha1x;
nctempfloat2 *Alpha1y;
nctempfloat2 *Alpha2x;
nctempfloat2 *Alpha2y;
nctempfloat2 *Eta1x;
nctempfloat2 *Eta1y;
nctempfloat2 *Eta2x;
nctempfloat2 *Eta2y;
nctempfloat1 *dx;
nctempfloat1 *dy;
float Dx;
float Dt;
};
typedef struct nctempmodel1 {int d[1]; struct model *a; } nctempmodel1;
struct nctempmodel2 {int d[2]; struct model *a; } ;
struct nctempmodel3 {int d[3]; struct model *a; } ;
struct nctempmodel4 {int d[4]; struct model *a; } ;
struct model* ModelNew (nctempfloat2 *kappa,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb,int Rheol);
float ModelStability (struct model* Model);
struct model* Modelmaxwell (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb);
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb);
int Modeld (nctempfloat1 *d,float dx,int nb);
float Modeltaus (float Q,float w0);
float Modeltaue (float Q,float w0);
int ModelAlpha (struct model* Model);
int ModelTheta (struct model* Model);
struct model* ModelNew (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb,int Rheol)
{
struct model* m;
int nctemp2= 4;
struct nctempchar1 *nctemp6;
static struct nctempchar1 nctemp7 = {{ 8}, (char*)"Rheol: \0"};
nctemp6=&nctemp7;
nctempchar1* nctemp4= nctemp6;
int nctemp8=LibePuts(nctemp2,nctemp4);
int nctemp10= 4;
int nctemp12= Rheol;
int nctemp14=LibePuti(nctemp10,nctemp12);
int nctemp16= 4;
struct nctempchar1 *nctemp20;
static struct nctempchar1 nctemp21 = {{ 3}, (char*)"\n\0"};
nctemp20=&nctemp21;
nctempchar1* nctemp18= nctemp20;
int nctemp22=LibePuts(nctemp16,nctemp18);
int nctemp24= 4;
int nctemp26=LibeFlush(nctemp24);
int nctemp27 = (Rheol ==1);
if(nctemp27)
{
nctempfloat2* nctemp35= vp;
nctempfloat2* nctemp38= rho;
nctempfloat2* nctemp41= Qp;
nctempfloat2* nctemp44= Qr;
float nctemp47= Dx;
float nctemp49= Dt;
float nctemp51= W0;
int nctemp53= Nb;
struct model* nctemp55=Modelmaxwell(nctemp35,nctemp38,nctemp41,nctemp44,nctemp47,nctemp49,nctemp51,nctemp53);
m =nctemp55;
}
else{
int nctemp56 = (Rheol ==2);
if(nctemp56)
{
nctempfloat2* nctemp64= vp;
nctempfloat2* nctemp67= rho;
nctempfloat2* nctemp70= Qp;
nctempfloat2* nctemp73= Qr;
float nctemp76= Dx;
float nctemp78= Dt;
float nctemp80= W0;
int nctemp82= Nb;
struct model* nctemp84=Modelsls(nctemp64,nctemp67,nctemp70,nctemp73,nctemp76,nctemp78,nctemp80,nctemp82);
m =nctemp84;
}
else{
int nctemp86= 4;
struct nctempchar1 *nctemp90;
static struct nctempchar1 nctemp91 = {{ 18}, (char*)"Unknown Q-model\n\0"};
nctemp90=&nctemp91;
nctempchar1* nctemp88= nctemp90;
int nctemp92=LibePuts(nctemp86,nctemp88);
int nctemp94= 4;
int nctemp96=LibeFlush(nctemp94);
int nctemp98=LibeExit();
}
}
return m;
}
struct model* Modelmaxwell (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb)
{
struct model* Model;
int Nx;
int Ny;
float Qmin;
float Qmax;
float tau0min;
float tau0max;
float tau0x;
float tau0y;
float argx;
float argy;
int i;
int j;
struct model *nctemp104=(struct model*)RunMalloc(sizeof(struct model));
Model =nctemp104;
Model->Dx =Dx;
Model->Dt =Dt;
int nctemp118=vp->d[0];Model->Nx =nctemp118;
int nctemp126=vp->d[1];Model->Ny =nctemp126;
Model->Nb =Nb;
Model->W0 =W0;
Nx =Model->Nx;
Ny =Model->Ny;
int nctemp152=Nx;
nctemp152=nctemp152*Ny;
nctempfloat2 *nctemp151;
nctemp151=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp151->d[0]=Nx;
nctemp151->d[1]=Ny;
nctemp151->a=(float *)RunMalloc(sizeof(float)*nctemp152);
Model->Rho=nctemp151;
int nctemp163=Nx;
nctemp163=nctemp163*Ny;
nctempfloat2 *nctemp162;
nctemp162=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp162->d[0]=Nx;
nctemp162->d[1]=Ny;
nctemp162->a=(float *)RunMalloc(sizeof(float)*nctemp163);
Model->Qp=nctemp162;
int nctemp174=Nx;
nctemp174=nctemp174*Ny;
nctempfloat2 *nctemp173;
nctemp173=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp173->d[0]=Nx;
nctemp173->d[1]=Ny;
nctemp173->a=(float *)RunMalloc(sizeof(float)*nctemp174);
Model->Qr=nctemp173;
int nctemp185=Nx;
nctemp185=nctemp185*Ny;
nctempfloat2 *nctemp184;
nctemp184=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp184->d[0]=Nx;
nctemp184->d[1]=Ny;
nctemp184->a=(float *)RunMalloc(sizeof(float)*nctemp185);
Model->Kappa=nctemp184;
int nctemp196=Nx;
nctemp196=nctemp196*Ny;
nctempfloat2 *nctemp195;
nctemp195=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp195->d[0]=Nx;
nctemp195->d[1]=Ny;
nctemp195->a=(float *)RunMalloc(sizeof(float)*nctemp196);
Model->Dkappax=nctemp195;
int nctemp207=Nx;
nctemp207=nctemp207*Ny;
nctempfloat2 *nctemp206;
nctemp206=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp206->d[0]=Nx;
nctemp206->d[1]=Ny;
nctemp206->a=(float *)RunMalloc(sizeof(float)*nctemp207);
Model->Dkappay=nctemp206;
int nctemp218=Nx;
nctemp218=nctemp218*Ny;
nctempfloat2 *nctemp217;
nctemp217=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp217->d[0]=Nx;
nctemp217->d[1]=Ny;
nctemp217->a=(float *)RunMalloc(sizeof(float)*nctemp218);
Model->Drhox=nctemp217;
int nctemp229=Nx;
nctemp229=nctemp229*Ny;
nctempfloat2 *nctemp228;
nctemp228=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp228->d[0]=Nx;
nctemp228->d[1]=Ny;
nctemp228->a=(float *)RunMalloc(sizeof(float)*nctemp229);
Model->Drhoy=nctemp228;
int nctemp240=Nx;
nctemp240=nctemp240*Ny;
nctempfloat2 *nctemp239;
nctemp239=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp239->d[0]=Nx;
nctemp239->d[1]=Ny;
nctemp239->a=(float *)RunMalloc(sizeof(float)*nctemp240);
Model->Alpha1x=nctemp239;
int nctemp251=Nx;
nctemp251=nctemp251*Ny;
nctempfloat2 *nctemp250;
nctemp250=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp250->d[0]=Nx;
nctemp250->d[1]=Ny;
nctemp250->a=(float *)RunMalloc(sizeof(float)*nctemp251);
Model->Alpha1y=nctemp250;
int nctemp262=Nx;
nctemp262=nctemp262*Ny;
nctempfloat2 *nctemp261;
nctemp261=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp261->d[0]=Nx;
nctemp261->d[1]=Ny;
nctemp261->a=(float *)RunMalloc(sizeof(float)*nctemp262);
Model->Alpha2x=nctemp261;
int nctemp273=Nx;
nctemp273=nctemp273*Ny;
nctempfloat2 *nctemp272;
nctemp272=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp272->d[0]=Nx;
nctemp272->d[1]=Ny;
nctemp272->a=(float *)RunMalloc(sizeof(float)*nctemp273);
Model->Alpha2y=nctemp272;
int nctemp284=Nx;
nctemp284=nctemp284*Ny;
nctempfloat2 *nctemp283;
nctemp283=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp283->d[0]=Nx;
nctemp283->d[1]=Ny;
nctemp283->a=(float *)RunMalloc(sizeof(float)*nctemp284);
Model->Eta1x=nctemp283;
int nctemp295=Nx;
nctemp295=nctemp295*Ny;
nctempfloat2 *nctemp294;
nctemp294=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp294->d[0]=Nx;
nctemp294->d[1]=Ny;
nctemp294->a=(float *)RunMalloc(sizeof(float)*nctemp295);
Model->Eta1y=nctemp294;
int nctemp306=Nx;
nctemp306=nctemp306*Ny;
nctempfloat2 *nctemp305;
nctemp305=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp305->d[0]=Nx;
nctemp305->d[1]=Ny;
nctemp305->a=(float *)RunMalloc(sizeof(float)*nctemp306);
Model->Eta2x=nctemp305;
int nctemp317=Nx;
nctemp317=nctemp317*Ny;
nctempfloat2 *nctemp316;
nctemp316=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp316->d[0]=Nx;
nctemp316->d[1]=Ny;
nctemp316->a=(float *)RunMalloc(sizeof(float)*nctemp317);
Model->Eta2y=nctemp316;
int nctemp328=Nx;
nctempfloat1 *nctemp327;
nctemp327=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp327->d[0]=Nx;
nctemp327->a=(float *)RunMalloc(sizeof(float)*nctemp328);
Model->dx=nctemp327;
int nctemp337=Ny;
nctempfloat1 *nctemp336;
nctemp336=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp336->d[0]=Ny;
nctemp336->a=(float *)RunMalloc(sizeof(float)*nctemp337);
Model->dy=nctemp336;
j =0;
int nctemp344 = (j < Ny);
while(nctemp344){
{
i =0;
int nctemp352 = (i < Nx);
while(nctemp352){
{
int nctemp359=i;
nctemp359=j*Model->Kappa->d[0]+nctemp359;
int nctemp369=i;
nctemp369=j*rho->d[0]+nctemp369;
int nctemp373=i;
nctemp373=j*vp->d[0]+nctemp373;
float nctemp376 = rho->a[nctemp369] * vp->a[nctemp373];
int nctemp378=i;
nctemp378=j*vp->d[0]+nctemp378;
float nctemp381 = nctemp376 * vp->a[nctemp378];
Model->Kappa->a[nctemp359] =nctemp381;
int nctemp385=i;
nctemp385=j*Model->Rho->d[0]+nctemp385;
int nctemp393=i;
nctemp393=j*rho->d[0]+nctemp393;
float nctemp396 = 1.0 / rho->a[nctemp393];
Model->Rho->a[nctemp385] =nctemp396;
int nctemp400=i;
nctemp400=j*Model->Qp->d[0]+nctemp400;
int nctemp404=i;
nctemp404=j*Qp->d[0]+nctemp404;
Model->Qp->a[nctemp400] =Qp->a[nctemp404];
int nctemp410=i;
nctemp410=j*Model->Qr->d[0]+nctemp410;
int nctemp414=i;
nctemp414=j*Qr->d[0]+nctemp414;
Model->Qr->a[nctemp410] =Qr->a[nctemp414];
}
int nctemp425 = i + 1;
i =nctemp425;
int nctemp426 = (i < Nx);
nctemp352=nctemp426;
}
}
int nctemp438 = j + 1;
j =nctemp438;
int nctemp439 = (j < Ny);
nctemp344=nctemp439;
}
nctempfloat1* nctemp444= Model->dx;
float nctemp447= Model->Dx;
int nctemp449= Model->Nb;
int nctemp451=Modeld(nctemp444,nctemp447,nctemp449);
nctempfloat1* nctemp453= Model->dy;
float nctemp456= Model->Dx;
int nctemp458= Model->Nb;
int nctemp460=Modeld(nctemp453,nctemp456,nctemp458);
struct model* nctemp462= Model;
int nctemp464=ModelAlpha(nctemp462);
struct model* nctemp466= Model;
int nctemp468=ModelTheta(nctemp466);
j =0;
int nctemp473 = (j < Ny);
while(nctemp473){
{
i =0;
int nctemp481 = (i < Nx);
while(nctemp481){
{
int nctemp488=i;
nctemp488=j*Model->Dkappax->d[0]+nctemp488;
int nctemp492=i;
nctemp492=j*Model->Kappa->d[0]+nctemp492;
Model->Dkappax->a[nctemp488] =Model->Kappa->a[nctemp492];
int nctemp498=i;
nctemp498=j*Model->Dkappay->d[0]+nctemp498;
int nctemp502=i;
nctemp502=j*Model->Kappa->d[0]+nctemp502;
Model->Dkappay->a[nctemp498] =Model->Kappa->a[nctemp502];
int nctemp508=i;
nctemp508=j*Model->Drhox->d[0]+nctemp508;
int nctemp512=i;
nctemp512=j*Model->Rho->d[0]+nctemp512;
Model->Drhox->a[nctemp508] =Model->Rho->a[nctemp512];
int nctemp518=i;
nctemp518=j*Model->Drhoy->d[0]+nctemp518;
int nctemp522=i;
nctemp522=j*Model->Rho->d[0]+nctemp522;
Model->Drhoy->a[nctemp518] =Model->Rho->a[nctemp522];
}
int nctemp533 = i + 1;
i =nctemp533;
int nctemp534 = (i < Nx);
nctemp481=nctemp534;
}
}
int nctemp546 = j + 1;
j =nctemp546;
int nctemp547 = (j < Ny);
nctemp473=nctemp547;
}
return Model;
}
int ModelAlpha (struct model* Model)
{
int Nx;
int Ny;
int i;
int j;
float Qmin;
float Qmax;
float tau0min;
float tau0max;
float tau0x;
float tau0y;
float argx;
float argy;
Nx =Model->Nx;
Ny =Model->Ny;
j =0;
int nctemp564 = (j < Ny);
while(nctemp564){
{
i =0;
int nctemp572 = (i < Nx);
while(nctemp572){
{
Qmin =1.1;
float nctemp588 = Qmin / Model->W0;
tau0min =nctemp588;
float nctemp597 = 1.0 / tau0min;
tau0min =nctemp597;
int nctemp602=Model->Nb;
nctemp602=j*Model->Qp->d[0]+nctemp602;
Qmax =Model->Qp->a[nctemp602];
float nctemp613 = Qmax / Model->W0;
tau0max =nctemp613;
float nctemp622 = 1.0 / tau0max;
tau0max =nctemp622;
float nctemp638 = tau0max - tau0min;
int nctemp640=i;
float nctemp642 = nctemp638 * Model->dx->a[nctemp640];
float nctemp643 = tau0min + nctemp642;
tau0x =nctemp643;
int nctemp648=i;
nctemp648=Model->Nb*Model->Qp->d[0]+nctemp648;
Qmax =Model->Qp->a[nctemp648];
float nctemp659 = Qmax / Model->W0;
tau0max =nctemp659;
float nctemp668 = 1.0 / tau0max;
tau0max =nctemp668;
float nctemp684 = tau0max - tau0min;
int nctemp686=j;
float nctemp688 = nctemp684 * Model->dy->a[nctemp686];
float nctemp689 = tau0min + nctemp688;
tau0y =nctemp689;
int nctemp694=i;
argx =Model->dx->a[nctemp694];
int nctemp700=j;
argy =Model->dy->a[nctemp700];
int nctemp705=i;
nctemp705=j*Model->Alpha1x->d[0]+nctemp705;
float nctemp713= -argx;
float nctemp712= nctemp713;
float nctemp714=LibeExp(nctemp712);
float nctemp719= -Model->Dt;
float nctemp721 = nctemp719 * tau0x;
float nctemp716= nctemp721;
float nctemp722=LibeExp(nctemp716);
float nctemp723 = nctemp714 * nctemp722;
Model->Alpha1x->a[nctemp705] =nctemp723;
int nctemp727=i;
nctemp727=j*Model->Alpha1y->d[0]+nctemp727;
float nctemp735= -argy;
float nctemp734= nctemp735;
float nctemp736=LibeExp(nctemp734);
float nctemp741= -Model->Dt;
float nctemp743 = nctemp741 * tau0y;
float nctemp738= nctemp743;
float nctemp744=LibeExp(nctemp738);
float nctemp745 = nctemp736 * nctemp744;
Model->Alpha1y->a[nctemp727] =nctemp745;
int nctemp749=i;
nctemp749=j*Model->Alpha2x->d[0]+nctemp749;
float nctemp755= -Model->Dt;
float nctemp757 = nctemp755 * tau0x;
Model->Alpha2x->a[nctemp749] =nctemp757;
int nctemp761=i;
nctemp761=j*Model->Alpha2y->d[0]+nctemp761;
float nctemp767= -Model->Dt;
float nctemp769 = nctemp767 * tau0y;
Model->Alpha2y->a[nctemp761] =nctemp769;
}
int nctemp778 = i + 1;
i =nctemp778;
int nctemp779 = (i < Nx);
nctemp572=nctemp779;
}
}
int nctemp791 = j + 1;
j =nctemp791;
int nctemp792 = (j < Ny);
nctemp564=nctemp792;
}
}
int ModelTheta (struct model* Model)
{
int Nx;
int Ny;
int i;
int j;
float Qmin;
float Qmax;
float tau0min;
float tau0max;
float tau0x;
float tau0y;
float argx;
float argy;
Nx =Model->Nx;
Ny =Model->Ny;
j =0;
int nctemp808 = (j < Ny);
while(nctemp808){
{
i =0;
int nctemp816 = (i < Nx);
while(nctemp816){
{
Qmin =1.1;
float nctemp832 = Qmin / Model->W0;
tau0min =nctemp832;
float nctemp841 = 1.0 / tau0min;
tau0min =nctemp841;
int nctemp846=Model->Nb;
nctemp846=j*Model->Qr->d[0]+nctemp846;
Qmax =Model->Qr->a[nctemp846];
float nctemp857 = Qmax / Model->W0;
tau0max =nctemp857;
float nctemp866 = 1.0 / tau0max;
tau0max =nctemp866;
float nctemp882 = tau0max - tau0min;
int nctemp884=i;
float nctemp886 = nctemp882 * Model->dx->a[nctemp884];
float nctemp887 = tau0min + nctemp886;
tau0x =nctemp887;
int nctemp892=i;
nctemp892=Model->Nb*Model->Qr->d[0]+nctemp892;
Qmax =Model->Qr->a[nctemp892];
float nctemp903 = Qmax / Model->W0;
tau0max =nctemp903;
float nctemp912 = 1.0 / tau0max;
tau0max =nctemp912;
float nctemp928 = tau0max - tau0min;
int nctemp930=j;
float nctemp932 = nctemp928 * Model->dy->a[nctemp930];
float nctemp933 = tau0min + nctemp932;
tau0y =nctemp933;
int nctemp938=i;
argx =Model->dx->a[nctemp938];
int nctemp944=j;
argy =Model->dy->a[nctemp944];
int nctemp949=i;
nctemp949=j*Model->Eta1x->d[0]+nctemp949;
float nctemp957= -argx;
float nctemp956= nctemp957;
float nctemp958=LibeExp(nctemp956);
float nctemp963= -Model->Dt;
float nctemp965 = nctemp963 * tau0x;
float nctemp960= nctemp965;
float nctemp966=LibeExp(nctemp960);
float nctemp967 = nctemp958 * nctemp966;
Model->Eta1x->a[nctemp949] =nctemp967;
int nctemp971=i;
nctemp971=j*Model->Eta1y->d[0]+nctemp971;
float nctemp979= -argy;
float nctemp978= nctemp979;
float nctemp980=LibeExp(nctemp978);
float nctemp985= -Model->Dt;
float nctemp987 = nctemp985 * tau0y;
float nctemp982= nctemp987;
float nctemp988=LibeExp(nctemp982);
float nctemp989 = nctemp980 * nctemp988;
Model->Eta1y->a[nctemp971] =nctemp989;
int nctemp993=i;
nctemp993=j*Model->Eta2x->d[0]+nctemp993;
float nctemp999= -Model->Dt;
float nctemp1001 = nctemp999 * tau0x;
Model->Eta2x->a[nctemp993] =nctemp1001;
int nctemp1005=i;
nctemp1005=j*Model->Eta2y->d[0]+nctemp1005;
float nctemp1011= -Model->Dt;
float nctemp1013 = nctemp1011 * tau0y;
Model->Eta2y->a[nctemp1005] =nctemp1013;
}
int nctemp1022 = i + 1;
i =nctemp1022;
int nctemp1023 = (i < Nx);
nctemp816=nctemp1023;
}
}
int nctemp1035 = j + 1;
j =nctemp1035;
int nctemp1036 = (j < Ny);
nctemp808=nctemp1036;
}
}
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb)
{
struct model* Model;
int Nx;
int Ny;
float tau0;
float Qmin;
float Qmax;
float tauemin;
float tauemax;
float tausmin;
float tausmax;
float tausx;
float tausy;
float tauex;
float tauey;
float argx;
float argy;
int i;
int j;
struct model *nctemp1044=(struct model*)RunMalloc(sizeof(struct model));
Model =nctemp1044;
Model->Dx =Dx;
Model->Dt =Dt;
int nctemp1058=vp->d[0];Model->Nx =nctemp1058;
int nctemp1066=vp->d[1];Model->Ny =nctemp1066;
Model->Nb =Nb;
Model->W0 =W0;
Nx =Model->Nx;
Ny =Model->Ny;
int nctemp1092=Nx;
nctemp1092=nctemp1092*Ny;
nctempfloat2 *nctemp1091;
nctemp1091=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1091->d[0]=Nx;
nctemp1091->d[1]=Ny;
nctemp1091->a=(float *)RunMalloc(sizeof(float)*nctemp1092);
Model->Rho=nctemp1091;
int nctemp1103=Nx;
nctemp1103=nctemp1103*Ny;
nctempfloat2 *nctemp1102;
nctemp1102=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1102->d[0]=Nx;
nctemp1102->d[1]=Ny;
nctemp1102->a=(float *)RunMalloc(sizeof(float)*nctemp1103);
Model->Qp=nctemp1102;
int nctemp1114=Nx;
nctemp1114=nctemp1114*Ny;
nctempfloat2 *nctemp1113;
nctemp1113=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1113->d[0]=Nx;
nctemp1113->d[1]=Ny;
nctemp1113->a=(float *)RunMalloc(sizeof(float)*nctemp1114);
Model->Qr=nctemp1113;
int nctemp1125=Nx;
nctemp1125=nctemp1125*Ny;
nctempfloat2 *nctemp1124;
nctemp1124=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1124->d[0]=Nx;
nctemp1124->d[1]=Ny;
nctemp1124->a=(float *)RunMalloc(sizeof(float)*nctemp1125);
Model->Kappa=nctemp1124;
int nctemp1136=Nx;
nctemp1136=nctemp1136*Ny;
nctempfloat2 *nctemp1135;
nctemp1135=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1135->d[0]=Nx;
nctemp1135->d[1]=Ny;
nctemp1135->a=(float *)RunMalloc(sizeof(float)*nctemp1136);
Model->Dkappax=nctemp1135;
int nctemp1147=Nx;
nctemp1147=nctemp1147*Ny;
nctempfloat2 *nctemp1146;
nctemp1146=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1146->d[0]=Nx;
nctemp1146->d[1]=Ny;
nctemp1146->a=(float *)RunMalloc(sizeof(float)*nctemp1147);
Model->Dkappay=nctemp1146;
int nctemp1158=Nx;
nctemp1158=nctemp1158*Ny;
nctempfloat2 *nctemp1157;
nctemp1157=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1157->d[0]=Nx;
nctemp1157->d[1]=Ny;
nctemp1157->a=(float *)RunMalloc(sizeof(float)*nctemp1158);
Model->Drhox=nctemp1157;
int nctemp1169=Nx;
nctemp1169=nctemp1169*Ny;
nctempfloat2 *nctemp1168;
nctemp1168=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1168->d[0]=Nx;
nctemp1168->d[1]=Ny;
nctemp1168->a=(float *)RunMalloc(sizeof(float)*nctemp1169);
Model->Drhoy=nctemp1168;
int nctemp1180=Nx;
nctemp1180=nctemp1180*Ny;
nctempfloat2 *nctemp1179;
nctemp1179=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1179->d[0]=Nx;
nctemp1179->d[1]=Ny;
nctemp1179->a=(float *)RunMalloc(sizeof(float)*nctemp1180);
Model->Alpha1x=nctemp1179;
int nctemp1191=Nx;
nctemp1191=nctemp1191*Ny;
nctempfloat2 *nctemp1190;
nctemp1190=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1190->d[0]=Nx;
nctemp1190->d[1]=Ny;
nctemp1190->a=(float *)RunMalloc(sizeof(float)*nctemp1191);
Model->Alpha1y=nctemp1190;
int nctemp1202=Nx;
nctemp1202=nctemp1202*Ny;
nctempfloat2 *nctemp1201;
nctemp1201=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1201->d[0]=Nx;
nctemp1201->d[1]=Ny;
nctemp1201->a=(float *)RunMalloc(sizeof(float)*nctemp1202);
Model->Alpha2x=nctemp1201;
int nctemp1213=Nx;
nctemp1213=nctemp1213*Ny;
nctempfloat2 *nctemp1212;
nctemp1212=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1212->d[0]=Nx;
nctemp1212->d[1]=Ny;
nctemp1212->a=(float *)RunMalloc(sizeof(float)*nctemp1213);
Model->Alpha2y=nctemp1212;
int nctemp1224=Nx;
nctemp1224=nctemp1224*Ny;
nctempfloat2 *nctemp1223;
nctemp1223=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1223->d[0]=Nx;
nctemp1223->d[1]=Ny;
nctemp1223->a=(float *)RunMalloc(sizeof(float)*nctemp1224);
Model->Eta1x=nctemp1223;
int nctemp1235=Nx;
nctemp1235=nctemp1235*Ny;
nctempfloat2 *nctemp1234;
nctemp1234=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1234->d[0]=Nx;
nctemp1234->d[1]=Ny;
nctemp1234->a=(float *)RunMalloc(sizeof(float)*nctemp1235);
Model->Eta1y=nctemp1234;
int nctemp1246=Nx;
nctemp1246=nctemp1246*Ny;
nctempfloat2 *nctemp1245;
nctemp1245=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1245->d[0]=Nx;
nctemp1245->d[1]=Ny;
nctemp1245->a=(float *)RunMalloc(sizeof(float)*nctemp1246);
Model->Eta2x=nctemp1245;
int nctemp1257=Nx;
nctemp1257=nctemp1257*Ny;
nctempfloat2 *nctemp1256;
nctemp1256=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1256->d[0]=Nx;
nctemp1256->d[1]=Ny;
nctemp1256->a=(float *)RunMalloc(sizeof(float)*nctemp1257);
Model->Eta2y=nctemp1256;
int nctemp1268=Nx;
nctempfloat1 *nctemp1267;
nctemp1267=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp1267->d[0]=Nx;
nctemp1267->a=(float *)RunMalloc(sizeof(float)*nctemp1268);
Model->dx=nctemp1267;
int nctemp1277=Ny;
nctempfloat1 *nctemp1276;
nctemp1276=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp1276->d[0]=Ny;
nctemp1276->a=(float *)RunMalloc(sizeof(float)*nctemp1277);
Model->dy=nctemp1276;
j =0;
int nctemp1284 = (j < Ny);
while(nctemp1284){
{
i =0;
int nctemp1292 = (i < Nx);
while(nctemp1292){
{
int nctemp1299=i;
nctemp1299=j*Model->Kappa->d[0]+nctemp1299;
int nctemp1309=i;
nctemp1309=j*rho->d[0]+nctemp1309;
int nctemp1313=i;
nctemp1313=j*vp->d[0]+nctemp1313;
float nctemp1316 = rho->a[nctemp1309] * vp->a[nctemp1313];
int nctemp1318=i;
nctemp1318=j*vp->d[0]+nctemp1318;
float nctemp1321 = nctemp1316 * vp->a[nctemp1318];
Model->Kappa->a[nctemp1299] =nctemp1321;
int nctemp1325=i;
nctemp1325=j*Model->Rho->d[0]+nctemp1325;
int nctemp1333=i;
nctemp1333=j*rho->d[0]+nctemp1333;
float nctemp1336 = 1.0 / rho->a[nctemp1333];
Model->Rho->a[nctemp1325] =nctemp1336;
int nctemp1340=i;
nctemp1340=j*Model->Qp->d[0]+nctemp1340;
int nctemp1344=i;
nctemp1344=j*Qp->d[0]+nctemp1344;
Model->Qp->a[nctemp1340] =Qp->a[nctemp1344];
int nctemp1350=i;
nctemp1350=j*Model->Qr->d[0]+nctemp1350;
int nctemp1354=i;
nctemp1354=j*Qr->d[0]+nctemp1354;
Model->Qr->a[nctemp1350] =Qr->a[nctemp1354];
}
int nctemp1365 = i + 1;
i =nctemp1365;
int nctemp1366 = (i < Nx);
nctemp1292=nctemp1366;
}
}
int nctemp1378 = j + 1;
j =nctemp1378;
int nctemp1379 = (j < Ny);
nctemp1284=nctemp1379;
}
nctempfloat1* nctemp1384= Model->dx;
float nctemp1387= Model->Dx;
int nctemp1389= Model->Nb;
int nctemp1391=Modeld(nctemp1384,nctemp1387,nctemp1389);
nctempfloat1* nctemp1393= Model->dy;
float nctemp1396= Model->Dx;
int nctemp1398= Model->Nb;
int nctemp1400=Modeld(nctemp1393,nctemp1396,nctemp1398);
j =0;
int nctemp1405 = (j < Ny);
while(nctemp1405){
{
i =0;
int nctemp1413 = (i < Nx);
while(nctemp1413){
{
float nctemp1425 = 1.0 / Model->W0;
tau0 =nctemp1425;
Qmin =1.1;
float nctemp1441 = tau0 / Qmin;
float nctemp1454 = Qmin * Qmin;
float nctemp1456 = nctemp1454 + 1.0;
float nctemp1446= nctemp1456;
float nctemp1457=LibeSqrt(nctemp1446);
float nctemp1459 = nctemp1457 + 1.0;
float nctemp1460 = nctemp1441 * nctemp1459;
tauemin =nctemp1460;
float nctemp1469 = 1.0 / tauemin;
tauemin =nctemp1469;
float nctemp1481 = tau0 / Qmin;
float nctemp1494 = Qmin * Qmin;
float nctemp1496 = nctemp1494 + 1.0;
float nctemp1486= nctemp1496;
float nctemp1497=LibeSqrt(nctemp1486);
float nctemp1499 = nctemp1497 - 1.0;
float nctemp1500 = nctemp1481 * nctemp1499;
tausmin =nctemp1500;
float nctemp1509 = 1.0 / tausmin;
tausmin =nctemp1509;
int nctemp1514=Nb;
nctemp1514=j*Model->Qp->d[0]+nctemp1514;
Qmax =Model->Qp->a[nctemp1514];
float nctemp1528 = tau0 / Qmin;
float nctemp1541 = Qmax * Qmax;
float nctemp1543 = nctemp1541 + 1.0;
float nctemp1533= nctemp1543;
float nctemp1544=LibeSqrt(nctemp1533);
float nctemp1546 = nctemp1544 + 1.0;
float nctemp1547 = nctemp1528 * nctemp1546;
tauemax =nctemp1547;
float nctemp1556 = 1.0 / tauemax;
tauemax =nctemp1556;
float nctemp1568 = tau0 / Qmin;
float nctemp1581 = Qmax * Qmax;
float nctemp1583 = nctemp1581 + 1.0;
float nctemp1573= nctemp1583;
float nctemp1584=LibeSqrt(nctemp1573);
float nctemp1586 = nctemp1584 - 1.0;
float nctemp1587 = nctemp1568 * nctemp1586;
tausmax =nctemp1587;
float nctemp1596 = 1.0 / tausmax;
tausmax =nctemp1596;
float nctemp1612 = tauemax - tauemin;
int nctemp1614=i;
float nctemp1616 = nctemp1612 * Model->dx->a[nctemp1614];
float nctemp1617 = tauemin + nctemp1616;
tauex =nctemp1617;
float nctemp1633 = tausmax - tausmin;
int nctemp1635=i;
float nctemp1637 = nctemp1633 * Model->dx->a[nctemp1635];
float nctemp1638 = tausmin + nctemp1637;
tausx =nctemp1638;
int nctemp1643=i;
nctemp1643=Nb*Model->Qp->d[0]+nctemp1643;
Qmax =Model->Qp->a[nctemp1643];
float nctemp1657 = tau0 / Qmin;
float nctemp1670 = Qmax * Qmax;
float nctemp1672 = nctemp1670 + 1.0;
float nctemp1662= nctemp1672;
float nctemp1673=LibeSqrt(nctemp1662);
float nctemp1675 = nctemp1673 + 1.0;
float nctemp1676 = nctemp1657 * nctemp1675;
tauemax =nctemp1676;
float nctemp1685 = 1.0 / tauemax;
tauemax =nctemp1685;
float nctemp1697 = tau0 / Qmin;
float nctemp1710 = Qmax * Qmax;
float nctemp1712 = nctemp1710 + 1.0;
float nctemp1702= nctemp1712;
float nctemp1713=LibeSqrt(nctemp1702);
float nctemp1715 = nctemp1713 - 1.0;
float nctemp1716 = nctemp1697 * nctemp1715;
tausmax =nctemp1716;
float nctemp1725 = 1.0 / tausmax;
tausmax =nctemp1725;
float nctemp1741 = tauemax - tauemin;
int nctemp1743=j;
float nctemp1745 = nctemp1741 * Model->dy->a[nctemp1743];
float nctemp1746 = tauemin + nctemp1745;
tauey =nctemp1746;
float nctemp1762 = tausmax - tausmin;
int nctemp1764=j;
float nctemp1766 = nctemp1762 * Model->dy->a[nctemp1764];
float nctemp1767 = tausmin + nctemp1766;
tausy =nctemp1767;
int nctemp1772=i;
argx =Model->dx->a[nctemp1772];
int nctemp1778=j;
argy =Model->dy->a[nctemp1778];
int nctemp1783=i;
nctemp1783=j*Model->Alpha1x->d[0]+nctemp1783;
float nctemp1791= -argx;
float nctemp1790= nctemp1791;
float nctemp1792=LibeExp(nctemp1790);
float nctemp1797= -Model->Dt;
float nctemp1799 = nctemp1797 * tausx;
float nctemp1794= nctemp1799;
float nctemp1800=LibeExp(nctemp1794);
float nctemp1801 = nctemp1792 * nctemp1800;
Model->Alpha1x->a[nctemp1783] =nctemp1801;
int nctemp1805=i;
nctemp1805=j*Model->Alpha1y->d[0]+nctemp1805;
float nctemp1813= -argy;
float nctemp1812= nctemp1813;
float nctemp1814=LibeExp(nctemp1812);
float nctemp1819= -Model->Dt;
float nctemp1821 = nctemp1819 * tausy;
float nctemp1816= nctemp1821;
float nctemp1822=LibeExp(nctemp1816);
float nctemp1823 = nctemp1814 * nctemp1822;
Model->Alpha1y->a[nctemp1805] =nctemp1823;
int nctemp1827=i;
nctemp1827=j*Model->Alpha2x->d[0]+nctemp1827;
float nctemp1835 = Model->Dt * tauex;
Model->Alpha2x->a[nctemp1827] =nctemp1835;
int nctemp1839=i;
nctemp1839=j*Model->Alpha2y->d[0]+nctemp1839;
float nctemp1847 = Model->Dt * tauey;
Model->Alpha2y->a[nctemp1839] =nctemp1847;
int nctemp1851=i;
nctemp1851=j*Model->Eta1x->d[0]+nctemp1851;
float nctemp1859= -argx;
float nctemp1858= nctemp1859;
float nctemp1860=LibeExp(nctemp1858);
float nctemp1865= -Model->Dt;
float nctemp1867 = nctemp1865 * tausx;
float nctemp1862= nctemp1867;
float nctemp1868=LibeExp(nctemp1862);
float nctemp1869 = nctemp1860 * nctemp1868;
Model->Eta1x->a[nctemp1851] =nctemp1869;
int nctemp1873=i;
nctemp1873=j*Model->Eta1y->d[0]+nctemp1873;
float nctemp1881= -argy;
float nctemp1880= nctemp1881;
float nctemp1882=LibeExp(nctemp1880);
float nctemp1887= -Model->Dt;
float nctemp1889 = nctemp1887 * tausy;
float nctemp1884= nctemp1889;
float nctemp1890=LibeExp(nctemp1884);
float nctemp1891 = nctemp1882 * nctemp1890;
Model->Eta1y->a[nctemp1873] =nctemp1891;
int nctemp1895=i;
nctemp1895=j*Model->Eta2x->d[0]+nctemp1895;
float nctemp1903 = Model->Dt * tauex;
Model->Eta2x->a[nctemp1895] =nctemp1903;
int nctemp1907=i;
nctemp1907=j*Model->Eta2y->d[0]+nctemp1907;
float nctemp1915 = Model->Dt * tauey;
Model->Eta2y->a[nctemp1907] =nctemp1915;
int nctemp1919=i;
nctemp1919=j*Model->Dkappax->d[0]+nctemp1919;
int nctemp1926=i;
nctemp1926=j*Model->Kappa->d[0]+nctemp1926;
float nctemp1938 = tausx / tauex;
float nctemp1939 = 1.0 - nctemp1938;
float nctemp1940 = Model->Kappa->a[nctemp1926] * nctemp1939;
Model->Dkappax->a[nctemp1919] =nctemp1940;
int nctemp1944=i;
nctemp1944=j*Model->Dkappay->d[0]+nctemp1944;
int nctemp1951=i;
nctemp1951=j*Model->Kappa->d[0]+nctemp1951;
float nctemp1963 = tausy / tauey;
float nctemp1964 = 1.0 - nctemp1963;
float nctemp1965 = Model->Kappa->a[nctemp1951] * nctemp1964;
Model->Dkappay->a[nctemp1944] =nctemp1965;
int nctemp1969=i;
nctemp1969=j*Model->Drhox->d[0]+nctemp1969;
int nctemp1976=i;
nctemp1976=j*Model->Rho->d[0]+nctemp1976;
float nctemp1988 = tausx / tauex;
float nctemp1989 = 1.0 - nctemp1988;
float nctemp1990 = Model->Rho->a[nctemp1976] * nctemp1989;
Model->Drhox->a[nctemp1969] =nctemp1990;
int nctemp1994=i;
nctemp1994=j*Model->Drhoy->d[0]+nctemp1994;
int nctemp2001=i;
nctemp2001=j*Model->Rho->d[0]+nctemp2001;
float nctemp2013 = tausy / tauey;
float nctemp2014 = 1.0 - nctemp2013;
float nctemp2015 = Model->Rho->a[nctemp2001] * nctemp2014;
Model->Drhoy->a[nctemp1994] =nctemp2015;
}
int nctemp2024 = i + 1;
i =nctemp2024;
int nctemp2025 = (i < Nx);
nctemp1413=nctemp2025;
}
}
int nctemp2037 = j + 1;
j =nctemp2037;
int nctemp2038 = (j < Ny);
nctemp1405=nctemp2038;
}
return Model;
}
float ModelStability (struct model* Model)
{
int nx;
int ny;
int i;
int j;
float vp;
float stab;
nx =Model->Nx;
ny =Model->Ny;
j =0;
int nctemp2055 = (j < ny);
while(nctemp2055){
{
i =0;
int nctemp2063 = (i < nx);
while(nctemp2063){
{
int nctemp2075=i;
nctemp2075=j*Model->Kappa->d[0]+nctemp2075;
int nctemp2079=i;
nctemp2079=j*Model->Rho->d[0]+nctemp2079;
float nctemp2082 = Model->Kappa->a[nctemp2075] * Model->Rho->a[nctemp2079];
float nctemp2071= nctemp2082;
float nctemp2083=LibeSqrt(nctemp2071);
vp =nctemp2083;
float nctemp2095 = vp * Model->Dt;
float nctemp2097 = nctemp2095 / Model->Dx;
stab =nctemp2097;
float nctemp2106= 2.0;
float nctemp2108=LibeSqrt(nctemp2106);
float nctemp2109 = 1.0 / nctemp2108;
int nctemp2098 = (stab > nctemp2109);
if(nctemp2098)
{
int nctemp2111= 4;
struct nctempchar1 *nctemp2115;
static struct nctempchar1 nctemp2116 = {{ 28}, (char*)"Stability index too large! \0"};
nctemp2115=&nctemp2116;
nctempchar1* nctemp2113= nctemp2115;
int nctemp2117=LibePuts(nctemp2111,nctemp2113);
int nctemp2119= 4;
float nctemp2121= stab;
struct nctempchar1 *nctemp2125;
static struct nctempchar1 nctemp2126 = {{ 2}, (char*)"g\0"};
nctemp2125=&nctemp2126;
nctempchar1* nctemp2123= nctemp2125;
int nctemp2127=LibePutf(nctemp2119,nctemp2121,nctemp2123);
int nctemp2129= 4;
struct nctempchar1 *nctemp2133;
static struct nctempchar1 nctemp2134 = {{ 3}, (char*)"\n\0"};
nctemp2133=&nctemp2134;
nctempchar1* nctemp2131= nctemp2133;
int nctemp2135=LibePuts(nctemp2129,nctemp2131);
int nctemp2137= 4;
struct nctempchar1 *nctemp2141;
static struct nctempchar1 nctemp2142 = {{ 7}, (char*)"vp: \n\0"};
nctemp2141=&nctemp2142;
nctempchar1* nctemp2139= nctemp2141;
int nctemp2143=LibePuts(nctemp2137,nctemp2139);
int nctemp2145= 4;
float nctemp2147= vp;
struct nctempchar1 *nctemp2151;
static struct nctempchar1 nctemp2152 = {{ 2}, (char*)"g\0"};
nctemp2151=&nctemp2152;
nctempchar1* nctemp2149= nctemp2151;
int nctemp2153=LibePutf(nctemp2145,nctemp2147,nctemp2149);
int nctemp2155= 4;
struct nctempchar1 *nctemp2159;
static struct nctempchar1 nctemp2160 = {{ 3}, (char*)"\n\0"};
nctemp2159=&nctemp2160;
nctempchar1* nctemp2157= nctemp2159;
int nctemp2161=LibePuts(nctemp2155,nctemp2157);
int nctemp2163= 4;
struct nctempchar1 *nctemp2167;
static struct nctempchar1 nctemp2168 = {{ 7}, (char*)"dt: \n\0"};
nctemp2167=&nctemp2168;
nctempchar1* nctemp2165= nctemp2167;
int nctemp2169=LibePuts(nctemp2163,nctemp2165);
int nctemp2171= 4;
float nctemp2173= Model->Dt;
struct nctempchar1 *nctemp2177;
static struct nctempchar1 nctemp2178 = {{ 2}, (char*)"g\0"};
nctemp2177=&nctemp2178;
nctempchar1* nctemp2175= nctemp2177;
int nctemp2179=LibePutf(nctemp2171,nctemp2173,nctemp2175);
int nctemp2181= 4;
struct nctempchar1 *nctemp2185;
static struct nctempchar1 nctemp2186 = {{ 3}, (char*)"\n\0"};
nctemp2185=&nctemp2186;
nctempchar1* nctemp2183= nctemp2185;
int nctemp2187=LibePuts(nctemp2181,nctemp2183);
int nctemp2189= 4;
struct nctempchar1 *nctemp2193;
static struct nctempchar1 nctemp2194 = {{ 7}, (char*)"dx: \n\0"};
nctemp2193=&nctemp2194;
nctempchar1* nctemp2191= nctemp2193;
int nctemp2195=LibePuts(nctemp2189,nctemp2191);
int nctemp2197= 4;
float nctemp2199= Model->Dx;
struct nctempchar1 *nctemp2203;
static struct nctempchar1 nctemp2204 = {{ 2}, (char*)"g\0"};
nctemp2203=&nctemp2204;
nctempchar1* nctemp2201= nctemp2203;
int nctemp2205=LibePutf(nctemp2197,nctemp2199,nctemp2201);
int nctemp2207= 4;
struct nctempchar1 *nctemp2211;
static struct nctempchar1 nctemp2212 = {{ 3}, (char*)"\n\0"};
nctemp2211=&nctemp2212;
nctempchar1* nctemp2209= nctemp2211;
int nctemp2213=LibePuts(nctemp2207,nctemp2209);
int nctemp2215= 4;
int nctemp2217=LibeFlush(nctemp2215);
}
}
int nctemp2226 = i + 1;
i =nctemp2226;
int nctemp2227 = (i < nx);
nctemp2063=nctemp2227;
}
}
int nctemp2239 = j + 1;
j =nctemp2239;
int nctemp2240 = (j < ny);
nctemp2055=nctemp2240;
}
return stab;
}
int Modeld (nctempfloat1 *d,float dx,int nb)
{
int i;
int n;
int nctemp2249=d->d[0];n =nctemp2249;
i =0;
int nctemp2257 = (i < n);
while(nctemp2257){
{
int nctemp2264=i;
d->a[nctemp2264] =1.0;
}
int nctemp2275 = i + 1;
i =nctemp2275;
int nctemp2276 = (i < n);
nctemp2257=nctemp2276;
}
i =0;
int nctemp2284 = (i < nb);
while(nctemp2284){
{
int nctemp2291=i;
int nctemp2297=i;
float nctemp2312=(float)(i);
float nctemp2316 = nctemp2312 * dx;
float nctemp2321=(float)(nb);
float nctemp2325 = nctemp2321 * dx;
float nctemp2326 = nctemp2316 / nctemp2325;
float nctemp2331=(float)(i);
float nctemp2335 = nctemp2331 * dx;
float nctemp2336 = nctemp2326 * nctemp2335;
float nctemp2341=(float)(nb);
float nctemp2345 = nctemp2341 * dx;
float nctemp2346 = nctemp2336 / nctemp2345;
float nctemp2347 = d->a[nctemp2297] * nctemp2346;
d->a[nctemp2291] =nctemp2347;
}
int nctemp2356 = i + 1;
i =nctemp2356;
int nctemp2357 = (i < nb);
nctemp2284=nctemp2357;
}
int nctemp2372 = n - 1;
int nctemp2374 = nctemp2372 - nb;
i =nctemp2374;
int nctemp2375 = (i < n);
while(nctemp2375){
{
int nctemp2382=i;
int nctemp2388=i;
int nctemp2412 = n - 1;
int nctemp2414 = nctemp2412 - i;
float nctemp2403=(float)(nctemp2414);
float nctemp2416 = nctemp2403 * dx;
float nctemp2421=(float)(nb);
float nctemp2425 = nctemp2421 * dx;
float nctemp2426 = nctemp2416 / nctemp2425;
int nctemp2440 = n - 1;
int nctemp2442 = nctemp2440 - i;
float nctemp2431=(float)(nctemp2442);
float nctemp2444 = nctemp2431 * dx;
float nctemp2445 = nctemp2426 * nctemp2444;
float nctemp2450=(float)(nb);
float nctemp2454 = nctemp2450 * dx;
float nctemp2455 = nctemp2445 / nctemp2454;
float nctemp2456 = d->a[nctemp2388] * nctemp2455;
d->a[nctemp2382] =nctemp2456;
}
int nctemp2465 = i + 1;
i =nctemp2465;
int nctemp2466 = (i < n);
nctemp2375=nctemp2466;
}
return 1;
}
}
