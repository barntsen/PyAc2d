/*  Translated by epsc  version December 2021 */
extern "C" {
typedef struct { float r; float i;} complex; 
typedef struct nctempfloat1 { int d[1]; float *a;} nctempfloat1; 
typedef struct nctempint1 { int d[1]; int *a;} nctempint1; 
typedef struct nctempchar1 { int d[1]; char *a;} nctempchar1; 
typedef struct nctempcomplex1 { int d[1]; complex *a;} nctempcomplex1; 
typedef struct nctempfloat2 { int d[2]; float *a;} nctempfloat2; 
typedef struct nctempint2 { int d[2]; int *a;} nctempint2; 
typedef struct nctempchar2 { int d[2]; char *a;} nctempchar2; 
typedef struct nctempcomplex2 { int d[2]; complex *a;} nctempcomplex2; 
typedef struct nctempfloat3 { int d[3]; float *a;} nctempfloat3; 
typedef struct nctempint3 { int d[3]; int *a;} nctempint3; 
typedef struct nctempchar3 { int d[3]; char *a;} nctempchar3; 
typedef struct nctempcomplex3 { int d[3]; complex *a;} nctempcomplex3; 
typedef struct nctempfloat4 { int d[4]; float *a;} nctempfloat4; 
typedef struct nctempint4 { int d[4]; int *a;} nctempint4; 
typedef struct nctempchar4 { int d[4]; char *a;} nctempchar4; 
typedef struct nctempcomplex4 { int d[4]; complex *a;} nctempcomplex4; 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void *GpuNew(int n);
void *GpuDelete(void *f);
void *GpuError();
void *RunMalloc(int n);
int RunFree(void * );
int RunSync();
int RunGetnt();
int RunGetnb();
int LibeArrayex (int line,nctempchar1 *name,int ival,int index,int bound);
int LibeClearerr ();
int LibeGeterrno ();
nctempchar1* LibeGeterrstr ();
struct MainArg {nctempchar1 *arg;
};
typedef struct nctempMainArg1 {int d[1]; struct MainArg *a; } nctempMainArg1;
struct nctempMainArg2 {int d[2]; struct MainArg *a; } ;
struct nctempMainArg3 {int d[3]; struct MainArg *a; } ;
struct nctempMainArg4 {int d[4]; struct MainArg *a; } ;
int Main (struct nctempMainArg1 *MainArgs);
int LibeInit ();
int LibeDelete ();
int LibeExit ();
nctempchar1* LibeGetenv (nctempchar1 *name);
int LibeOpen (nctempchar1 *name,nctempchar1 *mode);
int LibeClose (int fp);
int LibeGetc (int fp);
int LibeUngetc (int fp);
int LibeGetw (int fp,nctempchar1 *text);
int LibePs (nctempchar1 *s);
int LibePi (int n);
int LibePf (float r);
int LibePutf (int fp,float r,nctempchar1 *form);
int LibePutc (int fp,int c);
int LibePuts (int fp,nctempchar1 *s);
int LibePuti (int fp,int ival);
int LibeRead (int fp,int n,nctempchar1 *array);
int LibeWrite (int fp,int n,nctempchar1 *array);
int LibeSeek (int fp,int pos,int flag);
int LibeFlush (int fp);
int LibeStrlen (nctempchar1 *s);
int LibeStrcmp (nctempchar1 *s,nctempchar1 *t);
int LibeStrev (nctempchar1 *s);
nctempchar1* LibeStrsave (nctempchar1 *s);
int LibeStrcpy (nctempchar1 *s,nctempchar1 *t);
int LibeStrcat (nctempchar1 *s,nctempchar1 *t);
nctempchar1* LibeStradd (nctempchar1 *t,nctempchar1 *s);
int LibeIsalpha (int c);
int LibeIsdigit (int c);
int LibeIsalnum (int c);
int LibeAtoi (nctempchar1 *s);
int LibeItoa (int n,nctempchar1 *s);
int LibeItoh (int n,nctempchar1 *s);
float LibeAtof (nctempchar1 *s);
int LibeFtoa (float f,nctempchar1 *fmt,nctempchar1 *s);
float LibeMach (int flag);
float LibeFabs (float x);
float LibeFscale2 (float x,int n);
float LibeGetfman2 (float x);
int LibeGetfexp2 (float x);
float LibeFscale (float x,int n);
int LibeGetfman (float f,int maxdig);
float LibeGetffman (float f);
int LibeGetmaxdig (float f);
int LibeGetfexp (float f);
float LibeClock ();
int LibeSetnb (int n);
int LibeSetnt (int n);
int LibeGetnb ();
int LibeGetnt ();
int LibeMod (int n,int r);
float LibeSqrt (float x);
float LibeLn (float x);
float LibeExp (float x);
float LibeSin (float x);
float LibeCos (float x);
float LibeTan (float x);
float LibeArcsin (float x);
float LibeArccos (float x);
float LibeArctan (float x);
float LibePow (float base,float exponent);
int LibeSystem (nctempchar1 *cmd);
struct model {int Nx;
int Ny;
int Nb;
float W0;
nctempfloat2 *Qp;
nctempfloat2 *Qr;
nctempfloat2 *Kappa;
nctempfloat2 *Dkappax;
nctempfloat2 *Dkappay;
nctempfloat2 *Drhox;
nctempfloat2 *Drhoy;
nctempfloat2 *Rho;
nctempfloat2 *Alpha1x;
nctempfloat2 *Alpha1y;
nctempfloat2 *Alpha2x;
nctempfloat2 *Alpha2y;
nctempfloat2 *Eta1x;
nctempfloat2 *Eta1y;
nctempfloat2 *Eta2x;
nctempfloat2 *Eta2y;
nctempfloat1 *dx;
nctempfloat1 *dy;
float Dx;
float Dt;
};
typedef struct nctempmodel1 {int d[1]; struct model *a; } nctempmodel1;
struct nctempmodel2 {int d[2]; struct model *a; } ;
struct nctempmodel3 {int d[3]; struct model *a; } ;
struct nctempmodel4 {int d[4]; struct model *a; } ;
struct model* ModelNew (nctempfloat2 *kappa,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb,int Rheol);
float ModelStability (struct model* Model);
struct model* Modelmaxwell (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb);
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb);
int Modeld (nctempfloat1 *d,float dx,int nb);
float Modeltaus (float Q,float w0);
float Modeltaue (float Q,float w0);
int Modelalphamax (struct model* Model);
int Modelthetamax (struct model* Model);
int Modelalphasls (struct model* Model);
int Modelthetasls (struct model* Model);
struct model* ModelNew (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb,int Rheol)
{
struct model* m;
int nctemp2= 4;
struct nctempchar1 *nctemp6;
static struct nctempchar1 nctemp7 = {{ 8}, (char*)"Rheol: \0"};
nctemp6=&nctemp7;
nctempchar1* nctemp4= nctemp6;
int nctemp8=LibePuts(nctemp2,nctemp4);
int nctemp10= 4;
int nctemp12= Rheol;
int nctemp14=LibePuti(nctemp10,nctemp12);
int nctemp16= 4;
struct nctempchar1 *nctemp20;
static struct nctempchar1 nctemp21 = {{ 3}, (char*)"\n\0"};
nctemp20=&nctemp21;
nctempchar1* nctemp18= nctemp20;
int nctemp22=LibePuts(nctemp16,nctemp18);
int nctemp24= 4;
int nctemp26=LibeFlush(nctemp24);
int nctemp27 = (Rheol ==1);
if(nctemp27)
{
nctempfloat2* nctemp35= vp;
nctempfloat2* nctemp38= rho;
nctempfloat2* nctemp41= Qp;
nctempfloat2* nctemp44= Qr;
float nctemp47= Dx;
float nctemp49= Dt;
float nctemp51= W0;
int nctemp53= Nb;
struct model* nctemp55=Modelmaxwell(nctemp35,nctemp38,nctemp41,nctemp44,nctemp47,nctemp49,nctemp51,nctemp53);
m =nctemp55;
}
else{
int nctemp56 = (Rheol ==2);
if(nctemp56)
{
nctempfloat2* nctemp64= vp;
nctempfloat2* nctemp67= rho;
nctempfloat2* nctemp70= Qp;
nctempfloat2* nctemp73= Qr;
float nctemp76= Dx;
float nctemp78= Dt;
float nctemp80= W0;
int nctemp82= Nb;
struct model* nctemp84=Modelsls(nctemp64,nctemp67,nctemp70,nctemp73,nctemp76,nctemp78,nctemp80,nctemp82);
m =nctemp84;
}
else{
int nctemp86= 4;
struct nctempchar1 *nctemp90;
static struct nctempchar1 nctemp91 = {{ 18}, (char*)"Unknown Q-model\n\0"};
nctemp90=&nctemp91;
nctempchar1* nctemp88= nctemp90;
int nctemp92=LibePuts(nctemp86,nctemp88);
int nctemp94= 4;
int nctemp96=LibeFlush(nctemp94);
int nctemp98=LibeExit();
}
}
return m;
}
int Modelalphasls (struct model* Model)
{
int Nx;
int Ny;
int i;
int j;
float Qmin;
float Qmax;
float argx;
float argy;
float tau0;
float tauemax;
float tauemin;
float tausmax;
float tausmin;
float tauex;
float tausx;
float tauey;
float tausy;
Nx =Model->Nx;
Ny =Model->Ny;
j =0;
int nctemp112 = (j < Ny);
while(nctemp112){
{
i =0;
int nctemp120 = (i < Nx);
while(nctemp120){
{
float nctemp132 = 1.0 / Model->W0;
tau0 =nctemp132;
Qmin =1.1;
float nctemp148 = tau0 / Qmin;
float nctemp161 = Qmin * Qmin;
float nctemp163 = nctemp161 + 1.0;
float nctemp153= nctemp163;
float nctemp164=LibeSqrt(nctemp153);
float nctemp166 = nctemp164 + 1.0;
float nctemp167 = nctemp148 * nctemp166;
tauemin =nctemp167;
float nctemp176 = 1.0 / tauemin;
tauemin =nctemp176;
float nctemp188 = tau0 / Qmin;
float nctemp201 = Qmin * Qmin;
float nctemp203 = nctemp201 + 1.0;
float nctemp193= nctemp203;
float nctemp204=LibeSqrt(nctemp193);
float nctemp206 = nctemp204 - 1.0;
float nctemp207 = nctemp188 * nctemp206;
tausmin =nctemp207;
float nctemp216 = 1.0 / tausmin;
tausmin =nctemp216;
int nctemp221=Model->Nb;
nctemp221=j*Model->Qp->d[0]+nctemp221;
Qmax =Model->Qp->a[nctemp221];
float nctemp235 = tau0 / Qmin;
float nctemp248 = Qmax * Qmax;
float nctemp250 = nctemp248 + 1.0;
float nctemp240= nctemp250;
float nctemp251=LibeSqrt(nctemp240);
float nctemp253 = nctemp251 + 1.0;
float nctemp254 = nctemp235 * nctemp253;
tauemax =nctemp254;
float nctemp263 = 1.0 / tauemax;
tauemax =nctemp263;
float nctemp275 = tau0 / Qmin;
float nctemp288 = Qmax * Qmax;
float nctemp290 = nctemp288 + 1.0;
float nctemp280= nctemp290;
float nctemp291=LibeSqrt(nctemp280);
float nctemp293 = nctemp291 - 1.0;
float nctemp294 = nctemp275 * nctemp293;
tausmax =nctemp294;
float nctemp303 = 1.0 / tausmax;
tausmax =nctemp303;
float nctemp319 = tauemax - tauemin;
int nctemp321=i;
float nctemp323 = nctemp319 * Model->dx->a[nctemp321];
float nctemp324 = tauemin + nctemp323;
tauex =nctemp324;
float nctemp340 = tausmax - tausmin;
int nctemp342=i;
float nctemp344 = nctemp340 * Model->dx->a[nctemp342];
float nctemp345 = tausmin + nctemp344;
tausx =nctemp345;
int nctemp350=i;
nctemp350=Model->Nb*Model->Qp->d[0]+nctemp350;
Qmax =Model->Qp->a[nctemp350];
float nctemp364 = tau0 / Qmin;
float nctemp377 = Qmax * Qmax;
float nctemp379 = nctemp377 + 1.0;
float nctemp369= nctemp379;
float nctemp380=LibeSqrt(nctemp369);
float nctemp382 = nctemp380 + 1.0;
float nctemp383 = nctemp364 * nctemp382;
tauemax =nctemp383;
float nctemp392 = 1.0 / tauemax;
tauemax =nctemp392;
float nctemp404 = tau0 / Qmin;
float nctemp417 = Qmax * Qmax;
float nctemp419 = nctemp417 + 1.0;
float nctemp409= nctemp419;
float nctemp420=LibeSqrt(nctemp409);
float nctemp422 = nctemp420 - 1.0;
float nctemp423 = nctemp404 * nctemp422;
tausmax =nctemp423;
float nctemp432 = 1.0 / tausmax;
tausmax =nctemp432;
float nctemp448 = tauemax - tauemin;
int nctemp450=j;
float nctemp452 = nctemp448 * Model->dy->a[nctemp450];
float nctemp453 = tauemin + nctemp452;
tauey =nctemp453;
float nctemp469 = tausmax - tausmin;
int nctemp471=j;
float nctemp473 = nctemp469 * Model->dy->a[nctemp471];
float nctemp474 = tausmin + nctemp473;
tausy =nctemp474;
int nctemp479=i;
argx =Model->dx->a[nctemp479];
int nctemp485=j;
argy =Model->dy->a[nctemp485];
int nctemp490=i;
nctemp490=j*Model->Alpha1x->d[0]+nctemp490;
float nctemp498= -argx;
float nctemp497= nctemp498;
float nctemp499=LibeExp(nctemp497);
float nctemp504= -Model->Dt;
float nctemp506 = nctemp504 * tausx;
float nctemp501= nctemp506;
float nctemp507=LibeExp(nctemp501);
float nctemp508 = nctemp499 * nctemp507;
Model->Alpha1x->a[nctemp490] =nctemp508;
int nctemp512=i;
nctemp512=j*Model->Alpha1y->d[0]+nctemp512;
float nctemp520= -argy;
float nctemp519= nctemp520;
float nctemp521=LibeExp(nctemp519);
float nctemp526= -Model->Dt;
float nctemp528 = nctemp526 * tausy;
float nctemp523= nctemp528;
float nctemp529=LibeExp(nctemp523);
float nctemp530 = nctemp521 * nctemp529;
Model->Alpha1y->a[nctemp512] =nctemp530;
int nctemp534=i;
nctemp534=j*Model->Alpha2x->d[0]+nctemp534;
float nctemp542 = Model->Dt * tauex;
Model->Alpha2x->a[nctemp534] =nctemp542;
int nctemp546=i;
nctemp546=j*Model->Alpha2y->d[0]+nctemp546;
float nctemp554 = Model->Dt * tauey;
Model->Alpha2y->a[nctemp546] =nctemp554;
}
int nctemp563 = i + 1;
i =nctemp563;
int nctemp564 = (i < Nx);
nctemp120=nctemp564;
}
}
int nctemp576 = j + 1;
j =nctemp576;
int nctemp577 = (j < Ny);
nctemp112=nctemp577;
}
return 1;
}
int Modelthetasls (struct model* Model)
{
int Nx;
int Ny;
int i;
int j;
float Qmin;
float Qmax;
float argx;
float argy;
float tauemax;
float tauemin;
float tausmax;
float tausmin;
float tauex;
float tausx;
float tauey;
float tausy;
float tau0;
Nx =Model->Nx;
Ny =Model->Ny;
j =0;
int nctemp594 = (j < Ny);
while(nctemp594){
{
i =0;
int nctemp602 = (i < Nx);
while(nctemp602){
{
float nctemp614 = 1.0 / Model->W0;
tau0 =nctemp614;
Qmin =1.1;
float nctemp630 = tau0 / Qmin;
float nctemp643 = Qmin * Qmin;
float nctemp645 = nctemp643 + 1.0;
float nctemp635= nctemp645;
float nctemp646=LibeSqrt(nctemp635);
float nctemp648 = nctemp646 + 1.0;
float nctemp649 = nctemp630 * nctemp648;
tauemin =nctemp649;
float nctemp658 = 1.0 / tauemin;
tauemin =nctemp658;
float nctemp670 = tau0 / Qmin;
float nctemp683 = Qmin * Qmin;
float nctemp685 = nctemp683 + 1.0;
float nctemp675= nctemp685;
float nctemp686=LibeSqrt(nctemp675);
float nctemp688 = nctemp686 - 1.0;
float nctemp689 = nctemp670 * nctemp688;
tausmin =nctemp689;
float nctemp698 = 1.0 / tausmin;
tausmin =nctemp698;
int nctemp703=Model->Nb;
nctemp703=j*Model->Qr->d[0]+nctemp703;
Qmax =Model->Qr->a[nctemp703];
float nctemp717 = tau0 / Qmin;
float nctemp730 = Qmax * Qmax;
float nctemp732 = nctemp730 + 1.0;
float nctemp722= nctemp732;
float nctemp733=LibeSqrt(nctemp722);
float nctemp735 = nctemp733 + 1.0;
float nctemp736 = nctemp717 * nctemp735;
tauemax =nctemp736;
float nctemp745 = 1.0 / tauemax;
tauemax =nctemp745;
float nctemp757 = tau0 / Qmin;
float nctemp770 = Qmax * Qmax;
float nctemp772 = nctemp770 + 1.0;
float nctemp762= nctemp772;
float nctemp773=LibeSqrt(nctemp762);
float nctemp775 = nctemp773 - 1.0;
float nctemp776 = nctemp757 * nctemp775;
tausmax =nctemp776;
float nctemp785 = 1.0 / tausmax;
tausmax =nctemp785;
float nctemp801 = tauemax - tauemin;
int nctemp803=i;
float nctemp805 = nctemp801 * Model->dx->a[nctemp803];
float nctemp806 = tauemin + nctemp805;
tauex =nctemp806;
float nctemp822 = tausmax - tausmin;
int nctemp824=i;
float nctemp826 = nctemp822 * Model->dx->a[nctemp824];
float nctemp827 = tausmin + nctemp826;
tausx =nctemp827;
int nctemp832=i;
nctemp832=Model->Nb*Model->Qr->d[0]+nctemp832;
Qmax =Model->Qr->a[nctemp832];
float nctemp846 = tau0 / Qmin;
float nctemp859 = Qmax * Qmax;
float nctemp861 = nctemp859 + 1.0;
float nctemp851= nctemp861;
float nctemp862=LibeSqrt(nctemp851);
float nctemp864 = nctemp862 + 1.0;
float nctemp865 = nctemp846 * nctemp864;
tauemax =nctemp865;
float nctemp874 = 1.0 / tauemax;
tauemax =nctemp874;
float nctemp886 = tau0 / Qmin;
float nctemp899 = Qmax * Qmax;
float nctemp901 = nctemp899 + 1.0;
float nctemp891= nctemp901;
float nctemp902=LibeSqrt(nctemp891);
float nctemp904 = nctemp902 - 1.0;
float nctemp905 = nctemp886 * nctemp904;
tausmax =nctemp905;
float nctemp914 = 1.0 / tausmax;
tausmax =nctemp914;
float nctemp930 = tauemax - tauemin;
int nctemp932=j;
float nctemp934 = nctemp930 * Model->dy->a[nctemp932];
float nctemp935 = tauemin + nctemp934;
tauey =nctemp935;
float nctemp951 = tausmax - tausmin;
int nctemp953=j;
float nctemp955 = nctemp951 * Model->dy->a[nctemp953];
float nctemp956 = tausmin + nctemp955;
tausy =nctemp956;
int nctemp961=i;
argx =Model->dx->a[nctemp961];
int nctemp967=j;
argy =Model->dy->a[nctemp967];
int nctemp972=i;
nctemp972=j*Model->Eta1x->d[0]+nctemp972;
float nctemp980= -argx;
float nctemp979= nctemp980;
float nctemp981=LibeExp(nctemp979);
float nctemp986= -Model->Dt;
float nctemp988 = nctemp986 * tausx;
float nctemp983= nctemp988;
float nctemp989=LibeExp(nctemp983);
float nctemp990 = nctemp981 * nctemp989;
Model->Eta1x->a[nctemp972] =nctemp990;
int nctemp994=i;
nctemp994=j*Model->Eta1y->d[0]+nctemp994;
float nctemp1002= -argy;
float nctemp1001= nctemp1002;
float nctemp1003=LibeExp(nctemp1001);
float nctemp1008= -Model->Dt;
float nctemp1010 = nctemp1008 * tausy;
float nctemp1005= nctemp1010;
float nctemp1011=LibeExp(nctemp1005);
float nctemp1012 = nctemp1003 * nctemp1011;
Model->Eta1y->a[nctemp994] =nctemp1012;
int nctemp1016=i;
nctemp1016=j*Model->Eta2x->d[0]+nctemp1016;
float nctemp1024 = Model->Dt * tauex;
Model->Eta2x->a[nctemp1016] =nctemp1024;
int nctemp1028=i;
nctemp1028=j*Model->Eta2y->d[0]+nctemp1028;
float nctemp1036 = Model->Dt * tauey;
Model->Eta2y->a[nctemp1028] =nctemp1036;
}
int nctemp1045 = i + 1;
i =nctemp1045;
int nctemp1046 = (i < Nx);
nctemp602=nctemp1046;
}
}
int nctemp1058 = j + 1;
j =nctemp1058;
int nctemp1059 = (j < Ny);
nctemp594=nctemp1059;
}
return 1;
}
struct model* Modelmaxwell (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb)
{
struct model* Model;
int Nx;
int Ny;
int i;
int j;
struct model *nctemp1068=(struct model*)RunMalloc(sizeof(struct model));
Model =nctemp1068;
Model->Dx =Dx;
Model->Dt =Dt;
int nctemp1082=vp->d[0];Model->Nx =nctemp1082;
int nctemp1090=vp->d[1];Model->Ny =nctemp1090;
Model->Nb =Nb;
Model->W0 =W0;
Nx =Model->Nx;
Ny =Model->Ny;
int nctemp1116=Nx;
nctemp1116=nctemp1116*Ny;
nctempfloat2 *nctemp1115;
nctemp1115=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1115->d[0]=Nx;
nctemp1115->d[1]=Ny;
nctemp1115->a=(float *)RunMalloc(sizeof(float)*nctemp1116);
Model->Rho=nctemp1115;
int nctemp1127=Nx;
nctemp1127=nctemp1127*Ny;
nctempfloat2 *nctemp1126;
nctemp1126=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1126->d[0]=Nx;
nctemp1126->d[1]=Ny;
nctemp1126->a=(float *)RunMalloc(sizeof(float)*nctemp1127);
Model->Qp=nctemp1126;
int nctemp1138=Nx;
nctemp1138=nctemp1138*Ny;
nctempfloat2 *nctemp1137;
nctemp1137=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1137->d[0]=Nx;
nctemp1137->d[1]=Ny;
nctemp1137->a=(float *)RunMalloc(sizeof(float)*nctemp1138);
Model->Qr=nctemp1137;
int nctemp1149=Nx;
nctemp1149=nctemp1149*Ny;
nctempfloat2 *nctemp1148;
nctemp1148=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1148->d[0]=Nx;
nctemp1148->d[1]=Ny;
nctemp1148->a=(float *)RunMalloc(sizeof(float)*nctemp1149);
Model->Kappa=nctemp1148;
int nctemp1160=Nx;
nctemp1160=nctemp1160*Ny;
nctempfloat2 *nctemp1159;
nctemp1159=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1159->d[0]=Nx;
nctemp1159->d[1]=Ny;
nctemp1159->a=(float *)RunMalloc(sizeof(float)*nctemp1160);
Model->Dkappax=nctemp1159;
int nctemp1171=Nx;
nctemp1171=nctemp1171*Ny;
nctempfloat2 *nctemp1170;
nctemp1170=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1170->d[0]=Nx;
nctemp1170->d[1]=Ny;
nctemp1170->a=(float *)RunMalloc(sizeof(float)*nctemp1171);
Model->Dkappay=nctemp1170;
int nctemp1182=Nx;
nctemp1182=nctemp1182*Ny;
nctempfloat2 *nctemp1181;
nctemp1181=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1181->d[0]=Nx;
nctemp1181->d[1]=Ny;
nctemp1181->a=(float *)RunMalloc(sizeof(float)*nctemp1182);
Model->Drhox=nctemp1181;
int nctemp1193=Nx;
nctemp1193=nctemp1193*Ny;
nctempfloat2 *nctemp1192;
nctemp1192=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1192->d[0]=Nx;
nctemp1192->d[1]=Ny;
nctemp1192->a=(float *)RunMalloc(sizeof(float)*nctemp1193);
Model->Drhoy=nctemp1192;
int nctemp1204=Nx;
nctemp1204=nctemp1204*Ny;
nctempfloat2 *nctemp1203;
nctemp1203=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1203->d[0]=Nx;
nctemp1203->d[1]=Ny;
nctemp1203->a=(float *)RunMalloc(sizeof(float)*nctemp1204);
Model->Alpha1x=nctemp1203;
int nctemp1215=Nx;
nctemp1215=nctemp1215*Ny;
nctempfloat2 *nctemp1214;
nctemp1214=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1214->d[0]=Nx;
nctemp1214->d[1]=Ny;
nctemp1214->a=(float *)RunMalloc(sizeof(float)*nctemp1215);
Model->Alpha1y=nctemp1214;
int nctemp1226=Nx;
nctemp1226=nctemp1226*Ny;
nctempfloat2 *nctemp1225;
nctemp1225=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1225->d[0]=Nx;
nctemp1225->d[1]=Ny;
nctemp1225->a=(float *)RunMalloc(sizeof(float)*nctemp1226);
Model->Alpha2x=nctemp1225;
int nctemp1237=Nx;
nctemp1237=nctemp1237*Ny;
nctempfloat2 *nctemp1236;
nctemp1236=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1236->d[0]=Nx;
nctemp1236->d[1]=Ny;
nctemp1236->a=(float *)RunMalloc(sizeof(float)*nctemp1237);
Model->Alpha2y=nctemp1236;
int nctemp1248=Nx;
nctemp1248=nctemp1248*Ny;
nctempfloat2 *nctemp1247;
nctemp1247=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1247->d[0]=Nx;
nctemp1247->d[1]=Ny;
nctemp1247->a=(float *)RunMalloc(sizeof(float)*nctemp1248);
Model->Eta1x=nctemp1247;
int nctemp1259=Nx;
nctemp1259=nctemp1259*Ny;
nctempfloat2 *nctemp1258;
nctemp1258=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1258->d[0]=Nx;
nctemp1258->d[1]=Ny;
nctemp1258->a=(float *)RunMalloc(sizeof(float)*nctemp1259);
Model->Eta1y=nctemp1258;
int nctemp1270=Nx;
nctemp1270=nctemp1270*Ny;
nctempfloat2 *nctemp1269;
nctemp1269=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1269->d[0]=Nx;
nctemp1269->d[1]=Ny;
nctemp1269->a=(float *)RunMalloc(sizeof(float)*nctemp1270);
Model->Eta2x=nctemp1269;
int nctemp1281=Nx;
nctemp1281=nctemp1281*Ny;
nctempfloat2 *nctemp1280;
nctemp1280=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp1280->d[0]=Nx;
nctemp1280->d[1]=Ny;
nctemp1280->a=(float *)RunMalloc(sizeof(float)*nctemp1281);
Model->Eta2y=nctemp1280;
int nctemp1292=Nx;
nctempfloat1 *nctemp1291;
nctemp1291=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp1291->d[0]=Nx;
nctemp1291->a=(float *)RunMalloc(sizeof(float)*nctemp1292);
Model->dx=nctemp1291;
int nctemp1301=Ny;
nctempfloat1 *nctemp1300;
nctemp1300=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp1300->d[0]=Ny;
nctemp1300->a=(float *)RunMalloc(sizeof(float)*nctemp1301);
Model->dy=nctemp1300;
j =0;
int nctemp1308 = (j < Ny);
while(nctemp1308){
{
i =0;
int nctemp1316 = (i < Nx);
while(nctemp1316){
{
int nctemp1323=i;
nctemp1323=j*Model->Kappa->d[0]+nctemp1323;
int nctemp1333=i;
nctemp1333=j*rho->d[0]+nctemp1333;
int nctemp1337=i;
nctemp1337=j*vp->d[0]+nctemp1337;
float nctemp1340 = rho->a[nctemp1333] * vp->a[nctemp1337];
int nctemp1342=i;
nctemp1342=j*vp->d[0]+nctemp1342;
float nctemp1345 = nctemp1340 * vp->a[nctemp1342];
Model->Kappa->a[nctemp1323] =nctemp1345;
int nctemp1349=i;
nctemp1349=j*Model->Rho->d[0]+nctemp1349;
int nctemp1357=i;
nctemp1357=j*rho->d[0]+nctemp1357;
float nctemp1360 = 1.0 / rho->a[nctemp1357];
Model->Rho->a[nctemp1349] =nctemp1360;
int nctemp1364=i;
nctemp1364=j*Model->Qp->d[0]+nctemp1364;
int nctemp1368=i;
nctemp1368=j*Qp->d[0]+nctemp1368;
Model->Qp->a[nctemp1364] =Qp->a[nctemp1368];
int nctemp1374=i;
nctemp1374=j*Model->Qr->d[0]+nctemp1374;
int nctemp1378=i;
nctemp1378=j*Qr->d[0]+nctemp1378;
Model->Qr->a[nctemp1374] =Qr->a[nctemp1378];
}
int nctemp1389 = i + 1;
i =nctemp1389;
int nctemp1390 = (i < Nx);
nctemp1316=nctemp1390;
}
}
int nctemp1402 = j + 1;
j =nctemp1402;
int nctemp1403 = (j < Ny);
nctemp1308=nctemp1403;
}
nctempfloat1* nctemp1408= Model->dx;
float nctemp1411= Model->Dx;
int nctemp1413= Model->Nb;
int nctemp1415=Modeld(nctemp1408,nctemp1411,nctemp1413);
nctempfloat1* nctemp1417= Model->dy;
float nctemp1420= Model->Dx;
int nctemp1422= Model->Nb;
int nctemp1424=Modeld(nctemp1417,nctemp1420,nctemp1422);
struct model* nctemp1426= Model;
int nctemp1428=Modelalphamax(nctemp1426);
struct model* nctemp1430= Model;
int nctemp1432=Modelthetamax(nctemp1430);
j =0;
int nctemp1437 = (j < Ny);
while(nctemp1437){
{
i =0;
int nctemp1445 = (i < Nx);
while(nctemp1445){
{
int nctemp1452=i;
nctemp1452=j*Model->Dkappax->d[0]+nctemp1452;
int nctemp1456=i;
nctemp1456=j*Model->Kappa->d[0]+nctemp1456;
Model->Dkappax->a[nctemp1452] =Model->Kappa->a[nctemp1456];
int nctemp1462=i;
nctemp1462=j*Model->Dkappay->d[0]+nctemp1462;
int nctemp1466=i;
nctemp1466=j*Model->Kappa->d[0]+nctemp1466;
Model->Dkappay->a[nctemp1462] =Model->Kappa->a[nctemp1466];
int nctemp1472=i;
nctemp1472=j*Model->Drhox->d[0]+nctemp1472;
int nctemp1476=i;
nctemp1476=j*Model->Rho->d[0]+nctemp1476;
Model->Drhox->a[nctemp1472] =Model->Rho->a[nctemp1476];
int nctemp1482=i;
nctemp1482=j*Model->Drhoy->d[0]+nctemp1482;
int nctemp1486=i;
nctemp1486=j*Model->Rho->d[0]+nctemp1486;
Model->Drhoy->a[nctemp1482] =Model->Rho->a[nctemp1486];
}
int nctemp1497 = i + 1;
i =nctemp1497;
int nctemp1498 = (i < Nx);
nctemp1445=nctemp1498;
}
}
int nctemp1510 = j + 1;
j =nctemp1510;
int nctemp1511 = (j < Ny);
nctemp1437=nctemp1511;
}
return Model;
}
int Modelalphamax (struct model* Model)
{
int Nx;
int Ny;
int i;
int j;
float Qmin;
float Qmax;
float tau0min;
float tau0max;
float tau0x;
float tau0y;
float argx;
float argy;
Nx =Model->Nx;
Ny =Model->Ny;
j =0;
int nctemp1528 = (j < Ny);
while(nctemp1528){
{
i =0;
int nctemp1536 = (i < Nx);
while(nctemp1536){
{
Qmin =1.1;
float nctemp1552 = Qmin / Model->W0;
tau0min =nctemp1552;
float nctemp1561 = 1.0 / tau0min;
tau0min =nctemp1561;
int nctemp1566=Model->Nb;
nctemp1566=j*Model->Qp->d[0]+nctemp1566;
Qmax =Model->Qp->a[nctemp1566];
float nctemp1577 = Qmax / Model->W0;
tau0max =nctemp1577;
float nctemp1586 = 1.0 / tau0max;
tau0max =nctemp1586;
float nctemp1602 = tau0max - tau0min;
int nctemp1604=i;
float nctemp1606 = nctemp1602 * Model->dx->a[nctemp1604];
float nctemp1607 = tau0min + nctemp1606;
tau0x =nctemp1607;
int nctemp1612=i;
nctemp1612=Model->Nb*Model->Qp->d[0]+nctemp1612;
Qmax =Model->Qp->a[nctemp1612];
float nctemp1623 = Qmax / Model->W0;
tau0max =nctemp1623;
float nctemp1632 = 1.0 / tau0max;
tau0max =nctemp1632;
float nctemp1648 = tau0max - tau0min;
int nctemp1650=j;
float nctemp1652 = nctemp1648 * Model->dy->a[nctemp1650];
float nctemp1653 = tau0min + nctemp1652;
tau0y =nctemp1653;
int nctemp1658=i;
argx =Model->dx->a[nctemp1658];
int nctemp1664=j;
argy =Model->dy->a[nctemp1664];
int nctemp1669=i;
nctemp1669=j*Model->Alpha1x->d[0]+nctemp1669;
float nctemp1677= -argx;
float nctemp1676= nctemp1677;
float nctemp1678=LibeExp(nctemp1676);
float nctemp1683= -Model->Dt;
float nctemp1685 = nctemp1683 * tau0x;
float nctemp1680= nctemp1685;
float nctemp1686=LibeExp(nctemp1680);
float nctemp1687 = nctemp1678 * nctemp1686;
Model->Alpha1x->a[nctemp1669] =nctemp1687;
int nctemp1691=i;
nctemp1691=j*Model->Alpha1y->d[0]+nctemp1691;
float nctemp1699= -argy;
float nctemp1698= nctemp1699;
float nctemp1700=LibeExp(nctemp1698);
float nctemp1705= -Model->Dt;
float nctemp1707 = nctemp1705 * tau0y;
float nctemp1702= nctemp1707;
float nctemp1708=LibeExp(nctemp1702);
float nctemp1709 = nctemp1700 * nctemp1708;
Model->Alpha1y->a[nctemp1691] =nctemp1709;
int nctemp1713=i;
nctemp1713=j*Model->Alpha2x->d[0]+nctemp1713;
float nctemp1719= -Model->Dt;
float nctemp1721 = nctemp1719 * tau0x;
Model->Alpha2x->a[nctemp1713] =nctemp1721;
int nctemp1725=i;
nctemp1725=j*Model->Alpha2y->d[0]+nctemp1725;
float nctemp1731= -Model->Dt;
float nctemp1733 = nctemp1731 * tau0y;
Model->Alpha2y->a[nctemp1725] =nctemp1733;
}
int nctemp1742 = i + 1;
i =nctemp1742;
int nctemp1743 = (i < Nx);
nctemp1536=nctemp1743;
}
}
int nctemp1755 = j + 1;
j =nctemp1755;
int nctemp1756 = (j < Ny);
nctemp1528=nctemp1756;
}
return 1;
}
int Modelthetamax (struct model* Model)
{
int Nx;
int Ny;
int i;
int j;
float Qmin;
float Qmax;
float tau0min;
float tau0max;
float tau0x;
float tau0y;
float argx;
float argy;
Nx =Model->Nx;
Ny =Model->Ny;
j =0;
int nctemp1773 = (j < Ny);
while(nctemp1773){
{
i =0;
int nctemp1781 = (i < Nx);
while(nctemp1781){
{
Qmin =1.1;
float nctemp1797 = Qmin / Model->W0;
tau0min =nctemp1797;
float nctemp1806 = 1.0 / tau0min;
tau0min =nctemp1806;
int nctemp1811=Model->Nb;
nctemp1811=j*Model->Qr->d[0]+nctemp1811;
Qmax =Model->Qr->a[nctemp1811];
float nctemp1822 = Qmax / Model->W0;
tau0max =nctemp1822;
float nctemp1831 = 1.0 / tau0max;
tau0max =nctemp1831;
float nctemp1847 = tau0max - tau0min;
int nctemp1849=i;
float nctemp1851 = nctemp1847 * Model->dx->a[nctemp1849];
float nctemp1852 = tau0min + nctemp1851;
tau0x =nctemp1852;
int nctemp1857=i;
nctemp1857=Model->Nb*Model->Qr->d[0]+nctemp1857;
Qmax =Model->Qr->a[nctemp1857];
float nctemp1868 = Qmax / Model->W0;
tau0max =nctemp1868;
float nctemp1877 = 1.0 / tau0max;
tau0max =nctemp1877;
float nctemp1893 = tau0max - tau0min;
int nctemp1895=j;
float nctemp1897 = nctemp1893 * Model->dy->a[nctemp1895];
float nctemp1898 = tau0min + nctemp1897;
tau0y =nctemp1898;
int nctemp1903=i;
argx =Model->dx->a[nctemp1903];
int nctemp1909=j;
argy =Model->dy->a[nctemp1909];
int nctemp1914=i;
nctemp1914=j*Model->Eta1x->d[0]+nctemp1914;
float nctemp1922= -argx;
float nctemp1921= nctemp1922;
float nctemp1923=LibeExp(nctemp1921);
float nctemp1928= -Model->Dt;
float nctemp1930 = nctemp1928 * tau0x;
float nctemp1925= nctemp1930;
float nctemp1931=LibeExp(nctemp1925);
float nctemp1932 = nctemp1923 * nctemp1931;
Model->Eta1x->a[nctemp1914] =nctemp1932;
int nctemp1936=i;
nctemp1936=j*Model->Eta1y->d[0]+nctemp1936;
float nctemp1944= -argy;
float nctemp1943= nctemp1944;
float nctemp1945=LibeExp(nctemp1943);
float nctemp1950= -Model->Dt;
float nctemp1952 = nctemp1950 * tau0y;
float nctemp1947= nctemp1952;
float nctemp1953=LibeExp(nctemp1947);
float nctemp1954 = nctemp1945 * nctemp1953;
Model->Eta1y->a[nctemp1936] =nctemp1954;
int nctemp1958=i;
nctemp1958=j*Model->Eta2x->d[0]+nctemp1958;
float nctemp1964= -Model->Dt;
float nctemp1966 = nctemp1964 * tau0x;
Model->Eta2x->a[nctemp1958] =nctemp1966;
int nctemp1970=i;
nctemp1970=j*Model->Eta2y->d[0]+nctemp1970;
float nctemp1976= -Model->Dt;
float nctemp1978 = nctemp1976 * tau0y;
Model->Eta2y->a[nctemp1970] =nctemp1978;
}
int nctemp1987 = i + 1;
i =nctemp1987;
int nctemp1988 = (i < Nx);
nctemp1781=nctemp1988;
}
}
int nctemp2000 = j + 1;
j =nctemp2000;
int nctemp2001 = (j < Ny);
nctemp1773=nctemp2001;
}
return 1;
}
struct model* Modelsls (nctempfloat2 *vp,nctempfloat2 *rho,nctempfloat2 *Qp,nctempfloat2 *Qr,float Dx,float Dt,float W0,int Nb)
{
struct model* Model;
int Nx;
int Ny;
float tausx;
float tausy;
float tauex;
float tauey;
int i;
int j;
struct model *nctemp2010=(struct model*)RunMalloc(sizeof(struct model));
Model =nctemp2010;
Model->Dx =Dx;
Model->Dt =Dt;
int nctemp2024=vp->d[0];Model->Nx =nctemp2024;
int nctemp2032=vp->d[1];Model->Ny =nctemp2032;
Model->Nb =Nb;
Model->W0 =W0;
Nx =Model->Nx;
Ny =Model->Ny;
int nctemp2058=Nx;
nctemp2058=nctemp2058*Ny;
nctempfloat2 *nctemp2057;
nctemp2057=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2057->d[0]=Nx;
nctemp2057->d[1]=Ny;
nctemp2057->a=(float *)RunMalloc(sizeof(float)*nctemp2058);
Model->Rho=nctemp2057;
int nctemp2069=Nx;
nctemp2069=nctemp2069*Ny;
nctempfloat2 *nctemp2068;
nctemp2068=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2068->d[0]=Nx;
nctemp2068->d[1]=Ny;
nctemp2068->a=(float *)RunMalloc(sizeof(float)*nctemp2069);
Model->Qp=nctemp2068;
int nctemp2080=Nx;
nctemp2080=nctemp2080*Ny;
nctempfloat2 *nctemp2079;
nctemp2079=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2079->d[0]=Nx;
nctemp2079->d[1]=Ny;
nctemp2079->a=(float *)RunMalloc(sizeof(float)*nctemp2080);
Model->Qr=nctemp2079;
int nctemp2091=Nx;
nctemp2091=nctemp2091*Ny;
nctempfloat2 *nctemp2090;
nctemp2090=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2090->d[0]=Nx;
nctemp2090->d[1]=Ny;
nctemp2090->a=(float *)RunMalloc(sizeof(float)*nctemp2091);
Model->Kappa=nctemp2090;
int nctemp2102=Nx;
nctemp2102=nctemp2102*Ny;
nctempfloat2 *nctemp2101;
nctemp2101=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2101->d[0]=Nx;
nctemp2101->d[1]=Ny;
nctemp2101->a=(float *)RunMalloc(sizeof(float)*nctemp2102);
Model->Dkappax=nctemp2101;
int nctemp2113=Nx;
nctemp2113=nctemp2113*Ny;
nctempfloat2 *nctemp2112;
nctemp2112=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2112->d[0]=Nx;
nctemp2112->d[1]=Ny;
nctemp2112->a=(float *)RunMalloc(sizeof(float)*nctemp2113);
Model->Dkappay=nctemp2112;
int nctemp2124=Nx;
nctemp2124=nctemp2124*Ny;
nctempfloat2 *nctemp2123;
nctemp2123=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2123->d[0]=Nx;
nctemp2123->d[1]=Ny;
nctemp2123->a=(float *)RunMalloc(sizeof(float)*nctemp2124);
Model->Drhox=nctemp2123;
int nctemp2135=Nx;
nctemp2135=nctemp2135*Ny;
nctempfloat2 *nctemp2134;
nctemp2134=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2134->d[0]=Nx;
nctemp2134->d[1]=Ny;
nctemp2134->a=(float *)RunMalloc(sizeof(float)*nctemp2135);
Model->Drhoy=nctemp2134;
int nctemp2146=Nx;
nctemp2146=nctemp2146*Ny;
nctempfloat2 *nctemp2145;
nctemp2145=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2145->d[0]=Nx;
nctemp2145->d[1]=Ny;
nctemp2145->a=(float *)RunMalloc(sizeof(float)*nctemp2146);
Model->Alpha1x=nctemp2145;
int nctemp2157=Nx;
nctemp2157=nctemp2157*Ny;
nctempfloat2 *nctemp2156;
nctemp2156=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2156->d[0]=Nx;
nctemp2156->d[1]=Ny;
nctemp2156->a=(float *)RunMalloc(sizeof(float)*nctemp2157);
Model->Alpha1y=nctemp2156;
int nctemp2168=Nx;
nctemp2168=nctemp2168*Ny;
nctempfloat2 *nctemp2167;
nctemp2167=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2167->d[0]=Nx;
nctemp2167->d[1]=Ny;
nctemp2167->a=(float *)RunMalloc(sizeof(float)*nctemp2168);
Model->Alpha2x=nctemp2167;
int nctemp2179=Nx;
nctemp2179=nctemp2179*Ny;
nctempfloat2 *nctemp2178;
nctemp2178=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2178->d[0]=Nx;
nctemp2178->d[1]=Ny;
nctemp2178->a=(float *)RunMalloc(sizeof(float)*nctemp2179);
Model->Alpha2y=nctemp2178;
int nctemp2190=Nx;
nctemp2190=nctemp2190*Ny;
nctempfloat2 *nctemp2189;
nctemp2189=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2189->d[0]=Nx;
nctemp2189->d[1]=Ny;
nctemp2189->a=(float *)RunMalloc(sizeof(float)*nctemp2190);
Model->Eta1x=nctemp2189;
int nctemp2201=Nx;
nctemp2201=nctemp2201*Ny;
nctempfloat2 *nctemp2200;
nctemp2200=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2200->d[0]=Nx;
nctemp2200->d[1]=Ny;
nctemp2200->a=(float *)RunMalloc(sizeof(float)*nctemp2201);
Model->Eta1y=nctemp2200;
int nctemp2212=Nx;
nctemp2212=nctemp2212*Ny;
nctempfloat2 *nctemp2211;
nctemp2211=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2211->d[0]=Nx;
nctemp2211->d[1]=Ny;
nctemp2211->a=(float *)RunMalloc(sizeof(float)*nctemp2212);
Model->Eta2x=nctemp2211;
int nctemp2223=Nx;
nctemp2223=nctemp2223*Ny;
nctempfloat2 *nctemp2222;
nctemp2222=(nctempfloat2*)RunMalloc(sizeof(nctempfloat2));
nctemp2222->d[0]=Nx;
nctemp2222->d[1]=Ny;
nctemp2222->a=(float *)RunMalloc(sizeof(float)*nctemp2223);
Model->Eta2y=nctemp2222;
int nctemp2234=Nx;
nctempfloat1 *nctemp2233;
nctemp2233=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp2233->d[0]=Nx;
nctemp2233->a=(float *)RunMalloc(sizeof(float)*nctemp2234);
Model->dx=nctemp2233;
int nctemp2243=Ny;
nctempfloat1 *nctemp2242;
nctemp2242=(nctempfloat1*)RunMalloc(sizeof(nctempfloat1));
nctemp2242->d[0]=Ny;
nctemp2242->a=(float *)RunMalloc(sizeof(float)*nctemp2243);
Model->dy=nctemp2242;
j =0;
int nctemp2250 = (j < Ny);
while(nctemp2250){
{
i =0;
int nctemp2258 = (i < Nx);
while(nctemp2258){
{
int nctemp2265=i;
nctemp2265=j*Model->Kappa->d[0]+nctemp2265;
int nctemp2275=i;
nctemp2275=j*rho->d[0]+nctemp2275;
int nctemp2279=i;
nctemp2279=j*vp->d[0]+nctemp2279;
float nctemp2282 = rho->a[nctemp2275] * vp->a[nctemp2279];
int nctemp2284=i;
nctemp2284=j*vp->d[0]+nctemp2284;
float nctemp2287 = nctemp2282 * vp->a[nctemp2284];
Model->Kappa->a[nctemp2265] =nctemp2287;
int nctemp2291=i;
nctemp2291=j*Model->Rho->d[0]+nctemp2291;
int nctemp2299=i;
nctemp2299=j*rho->d[0]+nctemp2299;
float nctemp2302 = 1.0 / rho->a[nctemp2299];
Model->Rho->a[nctemp2291] =nctemp2302;
int nctemp2306=i;
nctemp2306=j*Model->Qp->d[0]+nctemp2306;
int nctemp2310=i;
nctemp2310=j*Qp->d[0]+nctemp2310;
Model->Qp->a[nctemp2306] =Qp->a[nctemp2310];
int nctemp2316=i;
nctemp2316=j*Model->Qr->d[0]+nctemp2316;
int nctemp2320=i;
nctemp2320=j*Qr->d[0]+nctemp2320;
Model->Qr->a[nctemp2316] =Qr->a[nctemp2320];
}
int nctemp2331 = i + 1;
i =nctemp2331;
int nctemp2332 = (i < Nx);
nctemp2258=nctemp2332;
}
}
int nctemp2344 = j + 1;
j =nctemp2344;
int nctemp2345 = (j < Ny);
nctemp2250=nctemp2345;
}
nctempfloat1* nctemp2350= Model->dx;
float nctemp2353= Model->Dx;
int nctemp2355= Model->Nb;
int nctemp2357=Modeld(nctemp2350,nctemp2353,nctemp2355);
nctempfloat1* nctemp2359= Model->dy;
float nctemp2362= Model->Dx;
int nctemp2364= Model->Nb;
int nctemp2366=Modeld(nctemp2359,nctemp2362,nctemp2364);
struct model* nctemp2368= Model;
int nctemp2370=Modelalphasls(nctemp2368);
struct model* nctemp2372= Model;
int nctemp2374=Modelthetasls(nctemp2372);
j =0;
int nctemp2379 = (j < Ny);
while(nctemp2379){
{
i =0;
int nctemp2387 = (i < Nx);
while(nctemp2387){
{
int nctemp2394=i;
nctemp2394=j*Model->Dkappax->d[0]+nctemp2394;
int nctemp2401=i;
nctemp2401=j*Model->Kappa->d[0]+nctemp2401;
float nctemp2413 = tausx / tauex;
float nctemp2414 = 1.0 - nctemp2413;
float nctemp2415 = Model->Kappa->a[nctemp2401] * nctemp2414;
Model->Dkappax->a[nctemp2394] =nctemp2415;
int nctemp2419=i;
nctemp2419=j*Model->Dkappay->d[0]+nctemp2419;
int nctemp2426=i;
nctemp2426=j*Model->Kappa->d[0]+nctemp2426;
float nctemp2438 = tausy / tauey;
float nctemp2439 = 1.0 - nctemp2438;
float nctemp2440 = Model->Kappa->a[nctemp2426] * nctemp2439;
Model->Dkappay->a[nctemp2419] =nctemp2440;
int nctemp2444=i;
nctemp2444=j*Model->Drhox->d[0]+nctemp2444;
int nctemp2451=i;
nctemp2451=j*Model->Rho->d[0]+nctemp2451;
float nctemp2463 = tausx / tauex;
float nctemp2464 = 1.0 - nctemp2463;
float nctemp2465 = Model->Rho->a[nctemp2451] * nctemp2464;
Model->Drhox->a[nctemp2444] =nctemp2465;
int nctemp2469=i;
nctemp2469=j*Model->Drhoy->d[0]+nctemp2469;
int nctemp2476=i;
nctemp2476=j*Model->Rho->d[0]+nctemp2476;
float nctemp2488 = tausy / tauey;
float nctemp2489 = 1.0 - nctemp2488;
float nctemp2490 = Model->Rho->a[nctemp2476] * nctemp2489;
Model->Drhoy->a[nctemp2469] =nctemp2490;
}
int nctemp2499 = i + 1;
i =nctemp2499;
int nctemp2500 = (i < Nx);
nctemp2387=nctemp2500;
}
}
int nctemp2512 = j + 1;
j =nctemp2512;
int nctemp2513 = (j < Ny);
nctemp2379=nctemp2513;
}
return Model;
}
float ModelStability (struct model* Model)
{
int nx;
int ny;
int i;
int j;
float vp;
float stab;
nx =Model->Nx;
ny =Model->Ny;
j =0;
int nctemp2530 = (j < ny);
while(nctemp2530){
{
i =0;
int nctemp2538 = (i < nx);
while(nctemp2538){
{
int nctemp2550=i;
nctemp2550=j*Model->Kappa->d[0]+nctemp2550;
int nctemp2554=i;
nctemp2554=j*Model->Rho->d[0]+nctemp2554;
float nctemp2557 = Model->Kappa->a[nctemp2550] * Model->Rho->a[nctemp2554];
float nctemp2546= nctemp2557;
float nctemp2558=LibeSqrt(nctemp2546);
vp =nctemp2558;
float nctemp2570 = vp * Model->Dt;
float nctemp2572 = nctemp2570 / Model->Dx;
stab =nctemp2572;
float nctemp2581= 2.0;
float nctemp2583=LibeSqrt(nctemp2581);
float nctemp2584 = 1.0 / nctemp2583;
int nctemp2573 = (stab > nctemp2584);
if(nctemp2573)
{
int nctemp2586= 4;
struct nctempchar1 *nctemp2590;
static struct nctempchar1 nctemp2591 = {{ 28}, (char*)"Stability index too large! \0"};
nctemp2590=&nctemp2591;
nctempchar1* nctemp2588= nctemp2590;
int nctemp2592=LibePuts(nctemp2586,nctemp2588);
int nctemp2594= 4;
float nctemp2596= stab;
struct nctempchar1 *nctemp2600;
static struct nctempchar1 nctemp2601 = {{ 2}, (char*)"g\0"};
nctemp2600=&nctemp2601;
nctempchar1* nctemp2598= nctemp2600;
int nctemp2602=LibePutf(nctemp2594,nctemp2596,nctemp2598);
int nctemp2604= 4;
struct nctempchar1 *nctemp2608;
static struct nctempchar1 nctemp2609 = {{ 3}, (char*)"\n\0"};
nctemp2608=&nctemp2609;
nctempchar1* nctemp2606= nctemp2608;
int nctemp2610=LibePuts(nctemp2604,nctemp2606);
int nctemp2612= 4;
struct nctempchar1 *nctemp2616;
static struct nctempchar1 nctemp2617 = {{ 7}, (char*)"vp: \n\0"};
nctemp2616=&nctemp2617;
nctempchar1* nctemp2614= nctemp2616;
int nctemp2618=LibePuts(nctemp2612,nctemp2614);
int nctemp2620= 4;
float nctemp2622= vp;
struct nctempchar1 *nctemp2626;
static struct nctempchar1 nctemp2627 = {{ 2}, (char*)"g\0"};
nctemp2626=&nctemp2627;
nctempchar1* nctemp2624= nctemp2626;
int nctemp2628=LibePutf(nctemp2620,nctemp2622,nctemp2624);
int nctemp2630= 4;
struct nctempchar1 *nctemp2634;
static struct nctempchar1 nctemp2635 = {{ 3}, (char*)"\n\0"};
nctemp2634=&nctemp2635;
nctempchar1* nctemp2632= nctemp2634;
int nctemp2636=LibePuts(nctemp2630,nctemp2632);
int nctemp2638= 4;
struct nctempchar1 *nctemp2642;
static struct nctempchar1 nctemp2643 = {{ 7}, (char*)"dt: \n\0"};
nctemp2642=&nctemp2643;
nctempchar1* nctemp2640= nctemp2642;
int nctemp2644=LibePuts(nctemp2638,nctemp2640);
int nctemp2646= 4;
float nctemp2648= Model->Dt;
struct nctempchar1 *nctemp2652;
static struct nctempchar1 nctemp2653 = {{ 2}, (char*)"g\0"};
nctemp2652=&nctemp2653;
nctempchar1* nctemp2650= nctemp2652;
int nctemp2654=LibePutf(nctemp2646,nctemp2648,nctemp2650);
int nctemp2656= 4;
struct nctempchar1 *nctemp2660;
static struct nctempchar1 nctemp2661 = {{ 3}, (char*)"\n\0"};
nctemp2660=&nctemp2661;
nctempchar1* nctemp2658= nctemp2660;
int nctemp2662=LibePuts(nctemp2656,nctemp2658);
int nctemp2664= 4;
struct nctempchar1 *nctemp2668;
static struct nctempchar1 nctemp2669 = {{ 7}, (char*)"dx: \n\0"};
nctemp2668=&nctemp2669;
nctempchar1* nctemp2666= nctemp2668;
int nctemp2670=LibePuts(nctemp2664,nctemp2666);
int nctemp2672= 4;
float nctemp2674= Model->Dx;
struct nctempchar1 *nctemp2678;
static struct nctempchar1 nctemp2679 = {{ 2}, (char*)"g\0"};
nctemp2678=&nctemp2679;
nctempchar1* nctemp2676= nctemp2678;
int nctemp2680=LibePutf(nctemp2672,nctemp2674,nctemp2676);
int nctemp2682= 4;
struct nctempchar1 *nctemp2686;
static struct nctempchar1 nctemp2687 = {{ 3}, (char*)"\n\0"};
nctemp2686=&nctemp2687;
nctempchar1* nctemp2684= nctemp2686;
int nctemp2688=LibePuts(nctemp2682,nctemp2684);
int nctemp2690= 4;
int nctemp2692=LibeFlush(nctemp2690);
}
}
int nctemp2701 = i + 1;
i =nctemp2701;
int nctemp2702 = (i < nx);
nctemp2538=nctemp2702;
}
}
int nctemp2714 = j + 1;
j =nctemp2714;
int nctemp2715 = (j < ny);
nctemp2530=nctemp2715;
}
return stab;
}
int Modeld (nctempfloat1 *d,float dx,int nb)
{
int i;
int n;
int nctemp2724=d->d[0];n =nctemp2724;
i =0;
int nctemp2732 = (i < n);
while(nctemp2732){
{
int nctemp2739=i;
d->a[nctemp2739] =1.0;
}
int nctemp2750 = i + 1;
i =nctemp2750;
int nctemp2751 = (i < n);
nctemp2732=nctemp2751;
}
i =0;
int nctemp2759 = (i < nb);
while(nctemp2759){
{
int nctemp2766=i;
int nctemp2772=i;
float nctemp2787=(float)(i);
float nctemp2791 = nctemp2787 * dx;
float nctemp2796=(float)(nb);
float nctemp2800 = nctemp2796 * dx;
float nctemp2801 = nctemp2791 / nctemp2800;
float nctemp2806=(float)(i);
float nctemp2810 = nctemp2806 * dx;
float nctemp2811 = nctemp2801 * nctemp2810;
float nctemp2816=(float)(nb);
float nctemp2820 = nctemp2816 * dx;
float nctemp2821 = nctemp2811 / nctemp2820;
float nctemp2822 = d->a[nctemp2772] * nctemp2821;
d->a[nctemp2766] =nctemp2822;
}
int nctemp2831 = i + 1;
i =nctemp2831;
int nctemp2832 = (i < nb);
nctemp2759=nctemp2832;
}
int nctemp2847 = n - 1;
int nctemp2849 = nctemp2847 - nb;
i =nctemp2849;
int nctemp2850 = (i < n);
while(nctemp2850){
{
int nctemp2857=i;
int nctemp2863=i;
int nctemp2887 = n - 1;
int nctemp2889 = nctemp2887 - i;
float nctemp2878=(float)(nctemp2889);
float nctemp2891 = nctemp2878 * dx;
float nctemp2896=(float)(nb);
float nctemp2900 = nctemp2896 * dx;
float nctemp2901 = nctemp2891 / nctemp2900;
int nctemp2915 = n - 1;
int nctemp2917 = nctemp2915 - i;
float nctemp2906=(float)(nctemp2917);
float nctemp2919 = nctemp2906 * dx;
float nctemp2920 = nctemp2901 * nctemp2919;
float nctemp2925=(float)(nb);
float nctemp2929 = nctemp2925 * dx;
float nctemp2930 = nctemp2920 / nctemp2929;
float nctemp2931 = d->a[nctemp2863] * nctemp2930;
d->a[nctemp2857] =nctemp2931;
}
int nctemp2940 = i + 1;
i =nctemp2940;
int nctemp2941 = (i < n);
nctemp2850=nctemp2941;
}
return 1;
}
}
